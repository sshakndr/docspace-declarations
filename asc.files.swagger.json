{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.Files",
    "version": "v2"
  },
  "paths": {
    "/api/2.0/files/file/{fileId}/saveediting": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Save file edits",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FileExtension": {
                    "type": "string",
                    "description": "File extension",
                    "example": "some text"
                  },
                  "DownloadUri": {
                    "type": "string",
                    "description": "URI to download a file",
                    "format": "uri",
                    "example": "some text"
                  },
                  "File": {
                    "type": "string",
                    "description": "Request file stream",
                    "format": "binary"
                  },
                  "Forcesave": {
                    "type": "boolean",
                    "description": "Specifies whether to force save a file or not",
                    "example": true
                  }
                }
              },
              "encoding": {
                "FileExtension": {
                  "style": "form"
                },
                "DownloadUri": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Forcesave": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Saved file parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Save file edits",
        "description": "Saves edits to a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/startedit": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Start file editing",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for starting file editing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File key for Document Service",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Start file editing",
        "description": "Informs about opening a file with the ID specified in the request for editing, locking it from being deleted or moved (this method is called by the mobile editors)."
      }
    },
    "/api/2.0/files/file/{fileId}/startfilling": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Starts filling",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Starts filling",
        "description": "Starts filling a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/trackeditfile": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Track file editing",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "tabId",
            "in": "query",
            "description": "Tab ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "docKeyForTrack",
            "in": "query",
            "description": "Document key for tracking",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          },
          {
            "name": "isFinish",
            "in": "query",
            "description": "Specifies whether to finish file tracking or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "File changes",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair<System.Boolean, System.String>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair<System.Boolean, System.String>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair<System.Boolean, System.String>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Track file editing",
        "description": "Tracks file changes when editing."
      }
    },
    "/api/2.0/files/file/{fileId}/openedit": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Open a file",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "view",
            "in": "query",
            "description": "Specifies if a document will be opened for viewing only or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "editorType",
            "in": "query",
            "description": "Editor type (Desktop, Mobile, Embedded)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
            }
          },
          {
            "name": "edit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto<System.Int32>"
                }
              }
            }
          }
        },
        "x-shortName": "Open a file",
        "description": "Returns the initialization configuration of a file to open it in the editor."
      }
    },
    "/api/2.0/files/file/{fileId}/presigned": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file download link asynchronously",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "File download link",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Helpers.DocumentService_FileLink"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get file download link asynchronously",
        "description": "Returns a link to download a file with the ID specified in the request asynchronously."
      }
    },
    "/api/2.0/files/file/referencedata": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get reference data",
        "requestBody": {
          "description": "Request parameters for getting reference data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto<System.Int32>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto<System.Int32>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto<System.Int32>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File reference data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReference"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get reference data",
        "description": "Returns the reference data to uniquely identify a file in its system and check the availability of insering data into the destination spreadsheet by the external link."
      }
    },
    "/api/2.0/files/file/{fileId}/protectusers": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get users with the access to the protected file",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "List of users with their access rights to the protected file",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.MentionWrapper"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get users with the access to the protected file",
        "description": "Returns a list of users with their access rights to the protected file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/log": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file history",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "List of actions performed on the file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get file history",
        "description": "Get the list of actions performed on the file with the specified identifier"
      }
    },
    "/api/2.0/files/file/{fileId}/history": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Change version history",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for changing version history",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated information about file versions",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change version history",
        "description": "Changes the version history of a file with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file versions",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Information about file versions: folder ID, version, version group, content length, pure content length, file status, URL to view a file, web URL, file type, file extension, comment, encrypted or not, thumbnail URL, thumbnail status, locked or not, user ID who locked a file, denies file downloading or not, denies file sharing or not, file accessibility",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          }
        },
        "x-shortName": "Get file versions",
        "description": "Returns the detailed information about all the available file versions with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/presigneduri": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file download link",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "File download link",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get file download link",
        "description": "Returns a link to download a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/isformpdf": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Check the PDF file",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean value: true - the PDF file is form, false - the PDF file is not a form",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Check the PDF file",
        "description": "Checks if the PDF file is form or not."
      }
    },
    "/api/2.0/files/file/{fileId}/copyas": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Copy a file",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for copying a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto<System.Text.Json.JsonElement>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto<System.Text.Json.JsonElement>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto<System.Text.Json.JsonElement>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Copied file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Copy a file",
        "description": "Copies (and converts if possible) an existing file to the specified folder."
      }
    },
    "/api/2.0/files/{folderId}/file": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a file",
        "description": "Creates a new file in the specified folder with the title specified in the request.\n\n**Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto<System.Text.Json.JsonElement>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto<System.Text.Json.JsonElement>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto<System.Text.Json.JsonElement>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a file"
      }
    },
    "/api/2.0/files/{folderId}/html": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create an HTML file",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating an HTML file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create an HTML file",
        "description": "Creates an HTML (.html) file in the selected folder with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/{folderId}/text": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a txt file",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a text file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a txt file",
        "description": "Creates a text (.txt) file in the selected folder with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}": {
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete a file",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for deleting a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete a file",
        "description": "Deletes a file with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file information",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          }
        },
        "x-shortName": "Get file information",
        "description": "Returns the detailed information about a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Update a file",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          }
        },
        "x-shortName": "Update a file",
        "description": "Updates the information of the selected file with the parameters specified in the request."
      }
    },
    "/api/2.0/files/file/fillresult": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "parameters": [
          {
            "name": "fillingSessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto<System.Int32>"
                }
              }
            }
          }
        }
      }
    },
    "/api/2.0/files/file/{fileId}/edit/diff": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get changes URL",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "File version history data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryDataDto"
                }
              }
            }
          }
        },
        "x-shortName": "Get changes URL",
        "description": "Returns a URL to the changes of a file version specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/edit/history": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get version history",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Version history data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              }
            }
          }
        },
        "x-shortName": "Get version history",
        "description": "Returns the version history of a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/lock": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Lock a file",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for locking a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Locked file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Lock a file",
        "description": "Locks a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/restoreversion": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Restore a file version",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "version",
            "in": "query",
            "description": "File version",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 1234
          },
          {
            "name": "url",
            "in": "query",
            "description": "File version URL",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "Version history data: file ID, key, file version, version group, a user who updated a file, creation time, history changes in the string format, list of history changes, server version",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto"
                }
              }
            }
          }
        },
        "x-shortName": "Restore a file version",
        "description": "Restores a file version specified in the request."
      }
    },
    "/api/2.0/files/file/{id}/link": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get primary external link",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          }
        },
        "x-shortName": "Get primary external link",
        "description": "Returns the primary external link by the identifier specified in the request."
      }
    },
    "/api/2.0/files/{fileId}/order": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/file/{fileId}/links": {
      "get": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Get file external links",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get file external links",
        "description": "Returns the external links of a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{id}/links": {
      "put": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Set an external link",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "External link request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileLinkRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Set an external link",
        "description": "Sets an external link to a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{id}/saveaspdf": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Save as pdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdfRequestDto<System.Int32>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdfRequestDto<System.Int32>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SaveAsPdfRequestDto<System.Int32>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Save as pdf",
        "description": "Saves a file with the identifier specified in the request as a PDF document"
      }
    },
    "/api/2.0/files/@my/file": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a file in the \"My documents\" section",
        "description": "Creates a new file in the \"My documents\" section with the title specified in the request.\n\n**Note**: If a file extension is different from DOCX/XLSX/PPTX and refers to one of the known text, spreadsheet, or presentation formats, it will be changed to DOCX/XLSX/PPTX accordingly. If the file extension is not specified or is unknown, the DOCX extension will be added to the file title.",
        "requestBody": {
          "description": "Request parameters for creating a file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto<System.Text.Json.JsonElement>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto<System.Text.Json.JsonElement>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto<System.Text.Json.JsonElement>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a file in the \"My documents\" section"
      }
    },
    "/api/2.0/files/@my/html": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create an HTML file in the \"My documents\" section",
        "requestBody": {
          "description": "Request parameters for creating an HTML file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create an HTML file in the \"My documents\" section",
        "description": "Creates an HTML (.html) file in the \"My documents\" section with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/@my/text": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create a text file in the \"My documents\" section",
        "requestBody": {
          "description": "Request parameters for creating a text file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New file information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a text file in the \"My documents\" section",
        "description": "Creates a text (.txt) file in the \"My documents\" section with the title and contents specified in the request."
      }
    },
    "/api/2.0/files/thumbnails": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create thumbnails",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file IDs",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "x-shortName": "Create thumbnails",
        "description": "Creates thumbnails for the files with the IDs specified in the request."
      }
    },
    "/api/2.0/files/masterform/{fileId}/checkfillformdraft": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Check the form draft",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for checking a form draft",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Link to the form",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        },
        "x-shortName": "Check the form draft",
        "description": "Checks if the current file is a form draft which can be filled out."
      }
    },
    "/api/2.0/files/templates": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Add template files",
        "requestBody": {
          "description": "Request parameters for adding files to the template list",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Add template files",
        "description": "Adds files with the IDs specified in the request to the template list."
      },
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete template files",
        "requestBody": {
          "description": "List of file IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "example": 1234
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "example": 1234
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "example": 1234
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete template files",
        "description": "Removes files with the IDs specified in the request from the template list."
      }
    },
    "/api/2.0/files/recent": {
      "delete": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Delete recent files",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "No content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete recent files",
        "description": "Removes files with the IDs specified in the request from the \"Recent\" section."
      }
    },
    "/api/2.0/files/file/{fileId}/edit_session": {
      "post": {
        "tags": [
          "Files / Files"
        ],
        "summary": "Create the editing session",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "fileSize",
            "in": "query",
            "description": "File size in bytes",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Information about created session",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create the editing session",
        "description": "Creates a session to edit the existing file with multiple chunks (needed for WebDAV)."
      }
    },
    "/api/2.0/files/folder/{folderId}/log": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get folder history",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "List of actions in the folder",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get folder history",
        "description": "Get the activity history of a folder with a specified identifier"
      }
    },
    "/api/2.0/files/folder/{folderId}": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Create a folder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Parent folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a folder",
        "description": "Creates a new folder with the title specified in the request. The parent folder ID can be also specified."
      },
      "delete": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Delete a folder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for deleting a folder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete a folder",
        "description": "Deletes a folder with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get folder information",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          }
        },
        "x-shortName": "Get folder information",
        "description": "Returns the detailed information about a folder with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Rename a folder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a folder: Title (string) - new folder title",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Rename a folder",
        "description": "Renames the selected folder with a new title specified in the request."
      }
    },
    "/api/2.0/files/folder/{folderId}/order": {
      "put": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/{folderId}": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get a folder by ID",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "roomId",
            "in": "query",
            "description": "Room ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "excludeSubject",
            "in": "query",
            "description": "Specifies whether to exclude a subject or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          },
          {
            "name": "extension",
            "in": "query",
            "description": "Specifies whether to search for a specific file extension",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          },
          {
            "name": "searchArea",
            "in": "query",
            "description": "Search area",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              }
            }
          }
        },
        "x-shortName": "Get a folder by ID",
        "description": "Returns the detailed list of files and folders located in the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/folder/{folderId}/path": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the folder path",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the folder path",
        "description": "Returns a path to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/{folderId}/subfolders": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get subfolders",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get subfolders",
        "description": "Returns a list of all the subfolders from a folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/{folderId}/news": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get new folder items",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get new folder items",
        "description": "Returns a list of all the new items from a folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/filesusedspace": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get used space of files",
        "responses": {
          "200": {
            "description": "Used space of files in the root folders",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get used space of files",
        "description": "Returns the used space of files in the root folders."
      }
    },
    "/api/2.0/files/folder/{id}/link": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get primary external link",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Folder Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Folder security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          }
        },
        "x-shortName": "Get primary external link",
        "description": "Returns the primary external link by the identifier specified in the request."
      }
    },
    "/api/2.0/files/@my": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"My documents\" section",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"My documents\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the \"My documents\" section",
        "description": "Returns the detailed list of files and folders located in the \"My documents\" section."
      }
    },
    "/api/2.0/files/@privacy": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"Private Room\" section",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The \"Private Room\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the \"Private Room\" section",
        "description": "Returns the detailed list of files and folders located in the \"Private Room\" section."
      }
    },
    "/api/2.0/files/@root": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get filtered sections",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "withoutTrash",
            "in": "query",
            "description": "Specifies whether to return the \"Trash\" section or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of section contents with the following parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get filtered sections",
        "description": "Returns all the sections matching the parameters specified in the request."
      }
    },
    "/api/2.0/files/@trash": {
      "get": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Get the \"Trash\" section",
        "parameters": [
          {
            "name": "userIdOrGroupId",
            "in": "query",
            "description": "User or group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Filter type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.FilterType"
            }
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "withsubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "applyFilterOption",
            "in": "query",
            "description": "Specifies whether to return only files, only folders or all elements from the specified folder",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.ApplyFilterOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The \"Trash\" section contents",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the \"Trash\" section",
        "description": "Returns the detailed list of files and folders located in the \"Trash\" section."
      }
    },
    "/api/2.0/files/{folderId}/upload/check": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/{folderId}/insert": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Insert a file",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File",
                    "format": "file"
                  },
                  "Title": {
                    "type": "string",
                    "description": "File name",
                    "example": "some text"
                  },
                  "CreateNewIfExist": {
                    "type": "boolean",
                    "description": "Specifies whether to create a new file if it already exists or not",
                    "example": true
                  },
                  "KeepConvertStatus": {
                    "type": "boolean",
                    "description": "Specifies whether to keep the file converting status or not",
                    "example": true
                  },
                  "Stream.CanRead": {
                    "type": "boolean"
                  },
                  "Stream.CanWrite": {
                    "type": "boolean"
                  },
                  "Stream.CanSeek": {
                    "type": "boolean"
                  },
                  "Stream.CanTimeout": {
                    "type": "boolean"
                  },
                  "Stream.Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.Position": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "CreateNewIfExist": {
                  "style": "form"
                },
                "KeepConvertStatus": {
                  "style": "form"
                },
                "Stream.CanRead": {
                  "style": "form"
                },
                "Stream.CanWrite": {
                  "style": "form"
                },
                "Stream.CanSeek": {
                  "style": "form"
                },
                "Stream.CanTimeout": {
                  "style": "form"
                },
                "Stream.Length": {
                  "style": "form"
                },
                "Stream.Position": {
                  "style": "form"
                },
                "Stream.ReadTimeout": {
                  "style": "form"
                },
                "Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Insert a file",
        "description": "Inserts a file specified in the request to the selected folder by single file uploading."
      }
    },
    "/api/2.0/files/{folderId}/upload": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Upload a file",
        "description": "Uploads a file specified in the request to the selected folder by single file uploading or standart multipart/form-data method.\n\n**Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for uploading a file",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Upload a file"
      }
    },
    "/api/2.0/files/@my/insert": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Insert a file to the \"My documents\" section",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File",
                    "format": "file"
                  },
                  "Title": {
                    "type": "string",
                    "description": "File name",
                    "example": "some text"
                  },
                  "CreateNewIfExist": {
                    "type": "boolean",
                    "description": "Specifies whether to create a new file if it already exists or not",
                    "example": true
                  },
                  "KeepConvertStatus": {
                    "type": "boolean",
                    "description": "Specifies whether to keep the file converting status or not",
                    "example": true
                  },
                  "Stream.CanRead": {
                    "type": "boolean"
                  },
                  "Stream.CanWrite": {
                    "type": "boolean"
                  },
                  "Stream.CanSeek": {
                    "type": "boolean"
                  },
                  "Stream.CanTimeout": {
                    "type": "boolean"
                  },
                  "Stream.Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.Position": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Stream.ReadTimeout": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Stream.WriteTimeout": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "CreateNewIfExist": {
                  "style": "form"
                },
                "KeepConvertStatus": {
                  "style": "form"
                },
                "Stream.CanRead": {
                  "style": "form"
                },
                "Stream.CanWrite": {
                  "style": "form"
                },
                "Stream.CanSeek": {
                  "style": "form"
                },
                "Stream.CanTimeout": {
                  "style": "form"
                },
                "Stream.Length": {
                  "style": "form"
                },
                "Stream.Position": {
                  "style": "form"
                },
                "Stream.ReadTimeout": {
                  "style": "form"
                },
                "Stream.WriteTimeout": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inserted file",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Insert a file to the \"My documents\" section",
        "description": "Inserts a file specified in the request to the \"My documents\" section by single file uploading."
      }
    },
    "/api/2.0/files/@my/upload": {
      "post": {
        "tags": [
          "Files / Folders"
        ],
        "summary": "Upload a file to the \"My documents\" section",
        "description": "Uploads a file specified in the request to the \"My documents\" section by single file uploading or standart multipart/form-data method.\n\n**Note**:  You can upload files in two different ways:\r\n <ol>\r\n<li>Using single file upload. You should set the Content-Type and Content-Disposition headers to specify a file name and content type, and send the file to the request body.</li>\r\n<li>Using standart multipart/form-data method.</li>\r\n</ol>",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for uploading a file",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uploaded file(s)",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Upload a file to the \"My documents\" section"
      }
    },
    "/api/2.0/files/file/{fileId}/checkconversion": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Get conversion status",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "start",
            "in": "query",
            "description": "Specifies if a conversion operation is started or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Conversion result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get conversion status",
        "description": "Checks the conversion status of a file with the ID specified in the request."
      },
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Start file conversion",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for starting file conversion",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto<System.Int32>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto<System.Int32>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto<System.Int32>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversion result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Start file conversion",
        "description": "Starts a conversion operation of a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/file/{fileId}/comment": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Update a comment",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "File ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating a comment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated comment",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update a comment",
        "description": "Updates a comment in a file with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/bulkdownload": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Bulk download",
        "requestBody": {
          "description": "Request parameters for downloading files",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "x-shortName": "Bulk download",
        "description": "Starts the download process of files and folders with the IDs specified in the request."
      }
    },
    "/api/2.0/files/fileops/copy": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Copy to a folder",
        "requestBody": {
          "description": "Request parameters for copying files",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Copy to a folder",
        "description": "Copies all the selected files and folders to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/delete": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Delete files and folders",
        "requestBody": {
          "description": "Request parameters for deleting files",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete files and folders",
        "description": "Deletes the files and folders with the IDs specified in the request."
      }
    },
    "/api/2.0/files/fileops/emptytrash": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Empty the \"Trash\" folder",
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Empty the \"Trash\" folder",
        "description": "Deletes all the files and folders from the \"Trash\" folder."
      }
    },
    "/api/2.0/files/fileops": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Get active operations",
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "x-shortName": "Get active operations",
        "description": "Returns a list of all the active operations."
      }
    },
    "/api/2.0/files/fileops/markasread": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Mark as read",
        "requestBody": {
          "description": "Base batch request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Mark as read",
        "description": "Marks the files and folders with the IDs specified in the request as read."
      }
    },
    "/api/2.0/files/fileops/move": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Move to a folder",
        "requestBody": {
          "description": "Request parameters for moving files and folders",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Move to a folder",
        "description": "Moves all the selected files and folders to the folder with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Check files and folders for conflicts",
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "description": "Request parameters for checking files and folders for conflicts",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchSimpleRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of file entry information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Check files and folders for conflicts",
        "description": "Checks a batch of files and folders for conflicts when moving or copying them to the folder with the ID specified in the request."
      }
    },
    "/api/2.0/files/fileops/duplicate": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/fileops/checkdestfolder": {
      "get": {
        "tags": [
          "Files / Operations"
        ],
        "parameters": [
          {
            "name": "inDto",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchSimpleRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/fileops/terminate/{id}": {
      "put": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Finish active operations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Operation ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "List of file operations",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          }
        },
        "x-shortName": "Finish active operations",
        "description": "Finishes an operation with the ID specified in the request or all the active operations."
      }
    },
    "/api/2.0/files/{folderId}/upload/create_session": {
      "post": {
        "tags": [
          "Files / Operations"
        ],
        "summary": "Chunked upload",
        "description": "Creates a session to upload large files in multiple chunks to the folder with the ID specified in the request.\n\n**Note**: Each chunk can have different length but the length should be multiple of <b>512</b> and greater or equal to <b>10 mb</b>. Last chunk can have any size.\r\nAfter the initial response to the request with the <b>200 OK</b> status, you must get the <em>location</em> field value from the response. Send all your chunks to this location.\r\nEach chunk must be sent in the exact order the chunks appear in the file.\r\nAfter receiving each chunk, the server will respond with the current information about the upload session if no errors occurred.\r\nWhen the number of bytes uploaded is equal to the number of bytes you sent in the initial request, the server responds with the <b>201 Created</b> status and sends you information about the uploaded file.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Folder ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Session request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Information about created session",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Chunked upload"
      }
    },
    "/api/2.0/files/rooms/roomquota": {
      "put": {
        "tags": [
          "Files / Quota"
        ],
        "summary": "Change a room quota limit",
        "requestBody": {
          "description": "Request parameters for updating room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto<System.Int32>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto<System.Int32>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto<System.Int32>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of rooms with the detailed information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change a room quota limit",
        "description": "Changes a quota limit for the rooms with the IDs specified in the request."
      }
    },
    "/api/2.0/files/rooms/resetquota": {
      "put": {
        "tags": [
          "Files / Quota"
        ],
        "summary": "Reset a room quota limit",
        "requestBody": {
          "description": "Request parameters for updating room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto<System.Int32>"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto<System.Int32>"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto<System.Int32>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of rooms with the detailed information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Reset a room quota limit",
        "description": "Resets a quota limit for the rooms with the IDs specified in the request."
      }
    },
    "/api/2.0/files/rooms": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a room",
        "requestBody": {
          "description": "Request parameters for creating a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a room",
        "description": "Creates a room in the \"Rooms\" section."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get rooms",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter by room type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
            }
          },
          {
            "name": "subjectId",
            "in": "query",
            "description": "Filter by user ID",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          },
          {
            "name": "searchInContent",
            "in": "query",
            "description": "Specifies whether to search within the section contents or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "withSubfolders",
            "in": "query",
            "description": "Specifies whether to return sections with or without subfolders",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "searchArea",
            "in": "query",
            "description": "Room search area (Active, Archive, Any)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.SearchArea"
            }
          },
          {
            "name": "withoutTags",
            "in": "query",
            "description": "Specifies whether to search by tags or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Tags in the serialized format",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          },
          {
            "name": "excludeSubject",
            "in": "query",
            "description": "Specifies whether to exclude a subject or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "provider",
            "in": "query",
            "description": "Filter by provider name (None, Box, DropBox, GoogleDrive, kDrive, OneDrive, WebDav)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ProviderFilter"
            }
          },
          {
            "name": "subjectFilter",
            "in": "query",
            "description": "Filter by subject (Owner - 1, Member - 1)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.SubjectFilter"
            }
          },
          {
            "name": "quotaFilter",
            "in": "query",
            "description": "Filter by quota (Default - 1, Custom - 2)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.QuotaFilter"
            }
          },
          {
            "name": "storageFilter",
            "in": "query",
            "description": "Filter by storage (Internal - 1, ThirdParty - 2)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Core.StorageFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get rooms",
        "description": "Returns the contents of the \"Rooms\" section by the parameters specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          }
        },
        "x-shortName": "Get room information",
        "description": "Returns the room information."
      },
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Rename a room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Rename a room",
        "description": "Renames a room with the ID specified in  the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove a room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for deleting a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Remove a room",
        "description": "Removes a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/archive": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Archive a room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for archiving a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Archive a room",
        "description": "Moves a room with the ID specified in the request to the \"Archive\" section."
      }
    },
    "/api/2.0/files/rooms/{id}/unarchive": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Unarchive a room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for unarchiving a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Unarchive a room",
        "description": "Moves a room with the ID specified in the request from the \"Archive\" section to the \"Rooms\" section."
      }
    },
    "/api/2.0/files/rooms/{id}/share": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Set room access rights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for inviting users to a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Set room access rights",
        "description": "Sets the access rights to a room with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room access rights",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "filterType",
            "in": "query",
            "description": "Share type filter",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.Security.ShareFilterType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Security information of room files",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get room access rights",
        "description": "Returns the access rights of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/links": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Set an external or invitation link",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Link request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Set an external or invitation link",
        "description": "Sets an external or invitation link with the ID specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get room links",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          },
          {
            "name": "type",
            "in": "query",
            "description": "Link type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get room links",
        "description": "Returns the links of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/link": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get primary external link",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Room security information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get primary external link",
        "description": "Returns the primary external link of a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/tags": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Add room tags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for adding tags",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Add room tags",
        "description": "Adds the tags to a room with the ID specified in the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove room tags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Request parameters for removing tags",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Remove room tags",
        "description": "Removes the tags from a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/logo": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a room logo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "Logo request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a room logo",
        "description": "Creates a logo for a room with the ID specified in the request."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Remove a room logo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Remove a room logo",
        "description": "Removes a logo from a room with the ID specified in the request."
      }
    },
    "/api/2.0/files/rooms/{id}/pin": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Pin a room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Pin a room",
        "description": "Pins a room with the ID specified in the request to the top of the list."
      }
    },
    "/api/2.0/files/rooms/{id}/unpin": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Unpin a room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Unpin a room",
        "description": "Unpins a room with the ID specified in the request from the top of the list."
      }
    },
    "/api/2.0/files/rooms/{id}/resend": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Resend room invitations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Room ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "User invitation request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Resend room invitations",
        "description": "Resends the email invitations to a room with the ID specified in the request to the selected users."
      }
    },
    "/api/2.0/files/rooms/{id}/settings": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/rooms/{id}/reorder": {
      "put": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/rooms/thirdparty/{id}": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a third-party room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the folder in the third-party storage in which the contents of the room will be stored",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "requestBody": {
          "description": "Request parameters for creating a room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoomRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoomRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoomRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a third-party room",
        "description": "Creates a room in the \"Rooms\" section stored in a third-party storage."
      }
    },
    "/api/2.0/files/tags": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Create a tag",
        "requestBody": {
          "description": "Request parameters for creating a tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New tag name",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create a tag",
        "description": "Creates a custom tag with the parameters specified in the request."
      },
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Get tags",
        "responses": {
          "200": {
            "description": "List of tag names",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get tags",
        "description": "Returns a list of custom tags."
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Delete tags",
        "requestBody": {
          "description": "Batch tags request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete tags",
        "description": "Deletes a bunch of custom tags specified in the request."
      }
    },
    "/api/2.0/files/logos": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "Upload an image for room logo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formCollection": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>"
                    }
                  }
                }
              },
              "encoding": {
                "formCollection": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload result",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Upload an image for room logo",
        "description": "Uploads a temporary image to create a room logo."
      }
    },
    "/api/2.0/files/rooms/{id}/indexexport": {
      "post": {
        "tags": [
          "Files / Rooms"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/rooms/indexexport": {
      "get": {
        "tags": [
          "Files / Rooms"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Files / Rooms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/files/docservice": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Check the document service URL",
        "requestBody": {
          "description": "Request parameters for checking the document service location",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document service information: the Document Server address, the Document Server address in the local private network, the Community Server address",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Check the document service URL",
        "description": "Checks the document service location."
      }
    },
    "/api/2.0/files/thirdparty": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the third-party settings access",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the third-party settings access",
        "description": "Changes the access to the third-party settings."
      },
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get third-party accounts",
        "responses": {
          "200": {
            "description": "List of connected providers information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.ThirdPartyParams"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get third-party accounts",
        "description": "Returns a list of all the connected third-party accounts."
      },
      "post": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Save a third-party account",
        "description": "Saves the third-party storage service account. For WebDav, Yandex, kDrive and SharePoint, the login and password are used for authentication. For other providers, the authentication is performed using a token received via OAuth 2.0.\n\n**Note**: List of provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "requestBody": {
          "description": "Third-party request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connected provider folder",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Save a third-party account"
      }
    },
    "/api/2.0/files/changedeleteconfrim": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Confirm the file deletion",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Confirm the file deletion",
        "description": "Specifies whether to confirm the file deletion or not."
      }
    },
    "/api/2.0/files/settings/downloadtargz": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the archive format (using body parameters)",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archive",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Files.Core.Compress.ICompress"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the archive format (using body parameters)",
        "description": "Changes the format of the downloaded archive from .zip to .tar.gz. This method uses the body parameters."
      }
    },
    "/api/2.0/files/settings/external": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the external sharing ability",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the external sharing ability",
        "description": "Changes the ability to share a file externally."
      }
    },
    "/api/2.0/files/settings/externalsocialmedia": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the external sharing ability on social networks",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the external sharing ability on social networks",
        "description": "Changes the ability to share a file externally on social networks."
      }
    },
    "/api/2.0/files/forcesave": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the forcasaving ability",
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the forcasaving ability",
        "description": "Changes the ability to force save a file."
      }
    },
    "/api/2.0/files/settings": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get file settings",
        "responses": {
          "200": {
            "description": "File settings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"
                }
              }
            }
          }
        },
        "x-shortName": "Get file settings",
        "description": "Returns all the file settings."
      }
    },
    "/api/2.0/files/info": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get the Documents information",
        "responses": {
          "200": {
            "description": "Module information: ID, product class name, title, description, icon URL, large icon URL, start URL, primary or nor, help URL",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Api.Core.Module"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the Documents information",
        "description": "Returns the information about the Documents module."
      }
    },
    "/api/2.0/files/@privacy/available": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Check the Private Room availability",
        "responses": {
          "200": {
            "description": "Boolean value: true if the Private Room settings are available",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Check the Private Room availability",
        "description": "Checks if the Private Room settings are available or not."
      }
    },
    "/api/2.0/files/storeforcesave": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the ability to store the forcesaved files",
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the ability to store the forcesaved files",
        "description": "Changes the ability to store the forcesaved file versions."
      }
    },
    "/api/2.0/files/storeoriginal": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the ability to upload original formats",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the ability to upload original formats",
        "description": "Changes the ability to upload documents in the original formats as well."
      }
    },
    "/api/2.0/files/keepnewfilename": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Ask a new file name",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Ask a new file name",
        "description": "Specifies whether to ask a user for a file name on creation or not."
      }
    },
    "/api/2.0/files/updateifexist": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Update a file version if it exists",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the operation is successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update a file version if it exists",
        "description": "Updates a file version if a file with such a name already exists."
      }
    },
    "/api/2.0/files/settings/autocleanup": {
      "get": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Get the trash bin auto-clearing setting",
        "responses": {
          "200": {
            "description": "The auto-clearing setting properties: auto-clearing or not, a time interval when the auto-clearing will be performed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the trash bin auto-clearing setting",
        "description": "Returns the trash bin auto-clearing setting."
      },
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Update the trash bin auto-clearing setting",
        "requestBody": {
          "description": "Auto-clearing request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The auto-clearing setting properties: auto-clearing or not, a time interval when the auto-clearing will be performed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update the trash bin auto-clearing setting",
        "description": "Updates the trash bin auto-clearing setting."
      }
    },
    "/api/2.0/files/settings/dafaultaccessrights": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Change the default access rights",
        "requestBody": {
          "description": "Sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated sharing rights (None, ReadWrite, Read, Restrict, Varies, Review, Comment, FillForms, CustomFilter, RoomAdmin, Editing, Collaborator)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change the default access rights",
        "description": "Changes the default access rights in the sharing settings."
      }
    },
    "/api/2.0/files/settings/openeditorinsametab": {
      "put": {
        "tags": [
          "Files / Settings"
        ],
        "summary": "Open document in same browser tab",
        "requestBody": {
          "description": "Settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boolean value: true if the parameter is enabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Open document in same browser tab",
        "description": "Change the ability to open in a document in the same browser tab"
      }
    },
    "/api/2.0/files/thirdparty/capabilities": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get providers",
        "description": "Returns a list of the available providers.\n\n**Note**: Available provider keys: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive.",
        "responses": {
          "200": {
            "description": "List of provider keys",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get providers"
      }
    },
    "/api/2.0/files/thirdparty/{providerId}": {
      "delete": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Remove a third-party account",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Provider ID. It is a part of the folder ID. Example: folder ID is \"sbox-123\", then provider ID is \"123\"",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1234
          }
        ],
        "responses": {
          "200": {
            "description": "Third-party folder ID",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Remove a third-party account",
        "description": "Removes the third-party storage service account with the ID specified in the request."
      }
    },
    "/api/2.0/files/thirdparty/common": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get common third-party services",
        "responses": {
          "200": {
            "description": "List of common third-party folderst",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get common third-party services",
        "description": "Returns a list of the third-party services connected to the \"Common\" section."
      }
    },
    "/api/2.0/files/thirdparty/backup": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get a third-party account backup",
        "responses": {
          "200": {
            "description": "Folder for the third-party account backup",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get a third-party account backup",
        "description": "Return a backup of the connected third-party account."
      },
      "post": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Save a third-party account backup",
        "description": "Saves a backup of the connected third-party account.\n\n**Note**: List of provider key: DropboxV2, Box, WebDav, Yandex, OneDrive, SharePoint, GoogleDrive, kDrive",
        "requestBody": {
          "description": "Third-party backup request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder for the third-party account backup",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Save a third-party account backup"
      }
    },
    "/api/2.0/files/thirdparty/providers": {
      "get": {
        "tags": [
          "Files / Third-party integration"
        ],
        "summary": "Get all providers",
        "description": "Returns a list of the all providers.\n\n**Note**: Available provider keys: Dropbox, Box, WebDav, OneDrive, GoogleDrive, kDrive, ownCloud, Nextcloud",
        "responses": {
          "200": {
            "description": "List of provider",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.ProviderDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get all providers"
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.Api.Collections.ItemKeyValuePair<System.Text.Json.JsonElement, System.String>": {
        "type": "object",
        "properties": {
          "key": {},
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.ApiDateTime": {
        "type": "object",
        "properties": {
          "utcTime": {
            "type": "string",
            "description": "UtcTime",
            "format": "date-time",
            "readOnly": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "timeZoneOffset": {
            "type": "string",
            "description": "TimeZoneOffset",
            "format": "date-span",
            "readOnly": true,
            "example": "00:00:00"
          }
        },
        "additionalProperties": false
      },
      "ASC.Api.Core.Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "appName": {
            "type": "string",
            "description": "Product class name",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "link": {
            "type": "string",
            "description": "Start link",
            "nullable": true,
            "example": "some text"
          },
          "iconUrl": {
            "type": "string",
            "description": "Icon URL",
            "nullable": true,
            "example": "some text"
          },
          "imageUrl": {
            "type": "string",
            "description": "Large image URL",
            "nullable": true,
            "example": "some text"
          },
          "helpUrl": {
            "type": "string",
            "description": "Help URL",
            "nullable": true,
            "example": "some text"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true,
            "example": "some text"
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Specifies if the module is primary or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Common.Threading.DistributedTaskStatus": {
        "enum": [
          "Created",
          "Running",
          "Completed",
          "Canceled",
          "Failted"
        ],
        "type": "integer",
        "description": "[0 - Created, 1 - Running, 2 - Completed, 3 - Canceled, 4 - Failted]",
        "format": "int32"
      },
      "ASC.Core.QuotaFilter": {
        "enum": [
          "All",
          "Default",
          "Custom"
        ],
        "type": "integer",
        "description": "[0 - All, 1 - Default, 2 - Custom]",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeActivationStatus": {
        "enum": [
          "NotActivated",
          "Activated",
          "Pending",
          "AutoGenerated"
        ],
        "type": "integer",
        "description": "[0 - Not activated, 1 - Activated, 2 - Pending, 4 - Auto generated]",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeStatus": {
        "enum": [
          "Active",
          "Terminated",
          "Pending",
          "Default",
          "All"
        ],
        "type": "integer",
        "description": "[1 - Active, 2 - Terminated, 4 - Pending, 5 - Default, 7 - All]",
        "format": "int32"
      },
      "ASC.Core.Users.MobilePhoneActivationStatus": {
        "enum": [
          "NotActivated",
          "Activated"
        ],
        "type": "integer",
        "description": "[0 - Not activated, 1 - Activated]",
        "format": "int32"
      },
      "ASC.Core.Users.UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "some text"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "some text"
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "nullable": true,
            "example": "some text"
          },
          "birthDate": {
            "type": "string",
            "description": "Birthday",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "sex": {
            "type": "boolean",
            "description": "Sex (male or female)",
            "nullable": true,
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminatedDate": {
            "type": "string",
            "description": "The date and time when the user account was terminated",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "workFromDate": {
            "type": "string",
            "description": "Registration date",
            "format": "date-time",
            "nullable": true,
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "some text"
          },
          "contacts": {
            "type": "string",
            "description": "List of contacts in the string format",
            "nullable": true,
            "example": "some text"
          },
          "contactsList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of contacts",
            "nullable": true,
            "example": "some text"
          },
          "location": {
            "type": "string",
            "description": "Location",
            "nullable": true,
            "example": "some text"
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true,
            "example": "some text"
          },
          "removed": {
            "type": "boolean",
            "description": "Specifies if the user account was removed or not",
            "example": true
          },
          "lastModified": {
            "type": "string",
            "description": "Last modified date",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "tenantId": {
            "type": "integer",
            "description": "Tenant ID",
            "format": "int32",
            "example": 1234
          },
          "isActive": {
            "type": "boolean",
            "description": "Spceifies if the user is active or not",
            "readOnly": true,
            "example": true
          },
          "cultureName": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Mobile phone",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "sid": {
            "type": "string",
            "description": "LDAP user identificator",
            "nullable": true,
            "example": "some text"
          },
          "ldapQouta": {
            "type": "integer",
            "description": "LDAP user quota attribute",
            "format": "int64",
            "example": 1234
          },
          "ssoNameId": {
            "type": "string",
            "description": "SSO SAML user identificator",
            "nullable": true,
            "example": "some text"
          },
          "ssoSessionId": {
            "type": "string",
            "description": "SSO SAML user session identificator",
            "nullable": true,
            "example": "some text"
          },
          "createDate": {
            "type": "string",
            "description": "Creation date",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "checkActivation": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.FederatedLogin.OAuth20Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token",
            "nullable": true,
            "example": "some text"
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token",
            "nullable": true,
            "example": "some text"
          },
          "expires_in": {
            "type": "integer",
            "description": "Expires in",
            "format": "int64",
            "example": 1234
          },
          "client_id": {
            "type": "string",
            "description": "Client id",
            "nullable": true,
            "example": "some text"
          },
          "client_secret": {
            "type": "string",
            "description": "Client secret",
            "nullable": true,
            "example": "some text"
          },
          "redirect_uri": {
            "type": "string",
            "description": "Redirect uri",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp",
            "format": "date-time",
            "example": "2008-04-10T06:30:00.0000000+04:00"
          },
          "isExpired": {
            "type": "boolean",
            "description": "Is expired",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.FileShareParams": {
        "type": "object",
        "properties": {
          "shareTo": {
            "type": "string",
            "description": "ID of the user with whom we want to share a file",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "email": {
            "type": "string",
            "description": "User email address",
            "nullable": true,
            "example": "some text"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ArchiveRoomRequestDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to archive a room after the editing session is finished or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.AutoCleanupRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "Enables the auto-clearing or not",
            "example": true
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BaseBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {},
            "description": "List of folder IDs",
            "nullable": true,
            "example": "some text"
          },
          "fileIds": {
            "type": "array",
            "items": {},
            "description": "List of file IDs",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {},
            "description": "List of folder IDs",
            "nullable": true,
            "example": "some text"
          },
          "fileIds": {
            "type": "array",
            "items": {},
            "description": "List of file IDs",
            "nullable": true,
            "example": "some text"
          },
          "destFolderId": {
            "description": "Destination folder ID",
            "format": "json",
            "example": "some text"
          },
          "conflictResolveType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType"
          },
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a folder after the editing session is finished or not",
            "example": true
          },
          "content": {
            "type": "boolean",
            "description": "Content",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchSimpleRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {},
            "description": "List of folder IDs",
            "nullable": true,
            "example": "some text"
          },
          "fileIds": {
            "type": "array",
            "items": {},
            "description": "List of file IDs",
            "nullable": true,
            "example": "some text"
          },
          "destFolderId": {
            "description": "Destination folder ID",
            "format": "json",
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.BatchTagsRequestDto": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tag names",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ChangeHistoryRequestDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "continueVersion": {
            "type": "boolean",
            "description": "Marks as a version or revision",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckConversionRequestDto<System.Int32>": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "File ID",
            "format": "int32",
            "example": 1234
          },
          "sync": {
            "type": "boolean",
            "description": "Specifies if the conversion process is synchronous or not",
            "example": true
          },
          "startConvert": {
            "type": "boolean",
            "description": "Specifies whether to start a conversion process or not",
            "example": true
          },
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Create new if exists",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckDocServiceUrlRequestDto": {
        "type": "object",
        "properties": {
          "docServiceUrl": {
            "type": "string",
            "description": "The Document Server address",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlInternal": {
            "type": "string",
            "description": "The Document Server address in the local private network",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlPortal": {
            "type": "string",
            "description": "The Community Server address",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckFillFormDraftRequestDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "action": {
            "type": "string",
            "description": "Action with a form",
            "nullable": true,
            "example": "some text"
          },
          "requestView": {
            "type": "boolean",
            "description": "Specifies whether to request a form for viewing or not",
            "readOnly": true,
            "example": true
          },
          "requestEmbedded": {
            "type": "boolean",
            "description": "Specifies whether to request an embedded form or not",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CheckUploadRequestDto": {
        "type": "object",
        "properties": {
          "filesTitle": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "File title",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CopyAsRequestDto<System.Text.Json.JsonElement>": {
        "type": "object",
        "properties": {
          "destTitle": {
            "type": "string",
            "description": "Destination file title",
            "nullable": true,
            "example": "some text"
          },
          "destFolderId": {
            "description": "Destination folder ID",
            "format": "int32",
            "example": 1234
          },
          "enableExternalExt": {
            "type": "boolean",
            "description": "Specifies whether to allow the creation of external extension files or not",
            "example": true
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "toForm": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFileRequestDto<System.Text.Json.JsonElement>": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "File title",
            "nullable": true,
            "example": "some text"
          },
          "templateId": {
            "description": "Template file ID",
            "format": "int32",
            "example": 1234
          },
          "enableExternalExt": {
            "type": "boolean",
            "description": "Specifies whether to allow the creation of external extension files or not",
            "example": true
          },
          "formId": {
            "type": "integer",
            "description": "Form ID",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateFolderRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Folder title",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateRoomRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Room name",
            "nullable": true,
            "example": "some text"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Private",
            "example": true
          },
          "share": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.FileShareParams"
            },
            "description": "Collection of sharing parameters",
            "nullable": true
          },
          "quota": {
            "type": "integer",
            "description": "Room quota",
            "format": "int64",
            "example": 1234
          },
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTagRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tag name",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateTextOrHtmlFileRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "File title",
            "nullable": true,
            "example": "some text"
          },
          "content": {
            "type": "string",
            "description": "File contents",
            "nullable": true,
            "example": "some text"
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Create new if exist",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.CreateThirdPartyRoomRequestDto": {
        "type": "object",
        "properties": {
          "createAsNewFolder": {
            "type": "boolean",
            "description": "Create as new folder",
            "example": true
          },
          "title": {
            "type": "string",
            "description": "Room name",
            "nullable": true,
            "example": "some text"
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Private",
            "example": true
          },
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteBatchRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {},
            "description": "List of folder IDs",
            "nullable": true,
            "example": "some text"
          },
          "fileIds": {
            "type": "array",
            "items": {},
            "description": "List of file IDs",
            "nullable": true,
            "example": "some text"
          },
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a file after the editing session is finished or not",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "description": "Specifies whether to move a file to the \"Trash\" folder or delete it immediately",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteFolderDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a folder after the editing session is finished or not",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "description": "Specifies whether to move a folder to the \"Trash\" folder or delete it immediately",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteRequestDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a file after the editing session is finished or not",
            "example": true
          },
          "immediately": {
            "type": "boolean",
            "description": "Specifies whether to move a file to the \"Trash\" folder or delete it immediately",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DeleteRoomRequestDto": {
        "type": "object",
        "properties": {
          "deleteAfter": {
            "type": "boolean",
            "description": "Specifies whether to delete a room after the editing session is finished or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DisplayRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "Specifies whether to set the specified settings or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DownloadRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {},
            "description": "List of folder IDs",
            "nullable": true,
            "example": "some text"
          },
          "fileIds": {
            "type": "array",
            "items": {},
            "description": "List of file IDs",
            "nullable": true,
            "example": "some text"
          },
          "fileConvertIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Api.Collections.ItemKeyValuePair<System.Text.Json.JsonElement, System.String>"
            },
            "description": "List of file IDs which will be converted",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.DuplicateRequestDto": {
        "type": "object",
        "properties": {
          "folderIds": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.FileBaseBatchRequestDto": {
        "type": "object",
        "properties": {
          "fileIds": {
            "type": "array",
            "items": {},
            "description": "List of file IDs",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.FileLinkRequestDto": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "description": "Link ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "internal": {
            "type": "boolean",
            "description": "Link scope",
            "example": true
          },
          "primary": {
            "type": "boolean",
            "description": "Primary link flag",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.GetReferenceDataDto<System.Int32>": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "integer",
            "description": "The unique document identifier used by the service to get a link to the file",
            "format": "int32",
            "example": 1234
          },
          "instanceId": {
            "type": "string",
            "description": "The unique system identifier",
            "nullable": true,
            "example": "some text"
          },
          "sourceFileId": {
            "type": "integer",
            "description": "Source file ID",
            "format": "int32",
            "example": 1234
          },
          "path": {
            "type": "string",
            "description": "The file name or relative path for the formula editor",
            "nullable": true,
            "example": "some text"
          },
          "link": {
            "type": "string",
            "description": "Link to file",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.LockFileRequestDto": {
        "type": "object",
        "properties": {
          "lockFile": {
            "type": "boolean",
            "description": "Specifies whether to lock a file or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.LogoRequestDto": {
        "type": "object",
        "properties": {
          "tmpFile": {
            "type": "string",
            "description": "The path to the temporary image file",
            "nullable": true,
            "example": "some text"
          },
          "x": {
            "type": "integer",
            "description": "The X coordinate of the rectangle starting point",
            "format": "int32",
            "example": 1234
          },
          "y": {
            "type": "integer",
            "description": "The Y coordinate of the rectangle starting point",
            "format": "int32",
            "example": 1234
          },
          "width": {
            "type": "integer",
            "description": "The rectangle width",
            "format": "int32",
            "example": 1234
          },
          "height": {
            "type": "integer",
            "description": "The rectangle height",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.OrderRequestDto": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "description": "Order",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "string",
            "description": "ID of the user with whom we want to share a room",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomInvitationRequestDto": {
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomInvitation"
            },
            "description": "Collection of invitation parameters",
            "nullable": true
          },
          "notify": {
            "type": "boolean",
            "description": "Notifies users about the shared room or not",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message to send when notifying about the shared room",
            "nullable": true,
            "example": "some text"
          },
          "culture": {
            "type": "string",
            "description": "Culture",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomLinkRequestDto": {
        "type": "object",
        "properties": {
          "linkId": {
            "type": "string",
            "description": "Link ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Link name",
            "nullable": true,
            "example": "some text"
          },
          "linkType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LinkType"
          },
          "password": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Link password",
            "nullable": true,
            "example": "some text"
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Specifies whether downloading a file from a link is disabled or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.RoomType": {
        "enum": [
          "FillingFormsRoom",
          "EditingRoom",
          "CustomRoom",
          "PublicRoom"
        ],
        "type": "integer",
        "description": "[1 - Form filling room, 2 - Collaboration room, 5 - Custom room, 6 - Public room]",
        "format": "int32"
      },
      "ASC.Files.Core.ApiModels.RequestDto.SaveAsPdfRequestDto<System.Int32>": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "Folder ID",
            "format": "int32",
            "example": 1234
          },
          "title": {
            "type": "string",
            "description": "File title",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SessionRequestDto": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "File name",
            "nullable": true,
            "example": "some text"
          },
          "fileSize": {
            "type": "integer",
            "description": "File length in bytes",
            "format": "int64",
            "example": 1234
          },
          "relativePath": {
            "type": "string",
            "description": "Relative path to the folder",
            "nullable": true,
            "example": "some text"
          },
          "createOn": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "encrypted": {
            "type": "boolean",
            "description": "Specifies whether to encrypt a file or not",
            "example": true
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Create new if exists",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SettingsRequestDto": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "Specifies whether to set the specified settings or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.SettingsRoomRequestDto": {
        "type": "object",
        "properties": {
          "indexing": {
            "type": "boolean",
            "description": "Indexing",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.StartEditRequestDto": {
        "type": "object",
        "properties": {
          "editingAlone": {
            "type": "boolean",
            "description": "Specifies whether to share a file with other users for editing or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.TemplatesRequestDto": {
        "type": "object",
        "properties": {
          "fileIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of file IDs",
            "format": "int32",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyBackupRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Connection URL for the sharepoint",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Authentication token",
            "nullable": true,
            "example": "some text"
          },
          "customerTitle": {
            "type": "string",
            "description": "Customer title",
            "nullable": true,
            "example": "some text"
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.ThirdPartyRequestDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Connection URL for the sharepoint",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Authentication token",
            "nullable": true,
            "example": "some text"
          },
          "customerTitle": {
            "type": "string",
            "description": "Customer title",
            "nullable": true,
            "example": "some text"
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateCommentRequestDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "comment": {
            "type": "string",
            "description": "Comment text",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateFileRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "File title",
            "nullable": true,
            "example": "some text"
          },
          "lastVersion": {
            "type": "integer",
            "description": "Number of the latest file version",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Room name",
            "nullable": true,
            "example": "some text"
          },
          "quota": {
            "type": "integer",
            "description": "Room quota",
            "format": "int64",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsQuotaRequestDto<System.Int32>": {
        "type": "object",
        "properties": {
          "roomIds": {
            "type": "array",
            "items": {},
            "description": "List of room IDs",
            "format": "json",
            "nullable": true
          },
          "quota": {
            "type": "integer",
            "description": "Room quota",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UpdateRoomsRoomIdsRequestDto<System.Int32>": {
        "type": "object",
        "properties": {
          "roomIds": {
            "type": "array",
            "items": {},
            "description": "List of room IDs",
            "format": "json",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UploadRequestDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "File",
            "format": "file",
            "nullable": true
          },
          "contentType": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentType"
          },
          "contentDisposition": {
            "$ref": "#/components/schemas/System.Net.Mime.ContentDisposition"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "description": "List of files when specified as multipart/form-data",
            "format": "file",
            "nullable": true
          },
          "createNewIfExist": {
            "type": "boolean",
            "description": "Specifies whether to create a new file if it already exists or not",
            "example": true
          },
          "storeOriginalFileFlag": {
            "type": "boolean",
            "description": "Specifies whether to upload documents in the original formats as well or not",
            "nullable": true,
            "example": true
          },
          "keepConvertStatus": {
            "type": "boolean",
            "description": "Specifies whether to keep the file converting status or not",
            "example": true
          },
          "stream": {
            "type": "string",
            "description": "Request input stream",
            "format": "binary",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.RequestDto.UserInvitationRequestDto": {
        "type": "object",
        "properties": {
          "usersIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user IDs",
            "nullable": true,
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "resendAll": {
            "type": "boolean",
            "description": "Resend all",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto": {
        "type": "object",
        "properties": {
          "request": {
            "type": "boolean",
            "description": "Request",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderDto": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "Files",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CheckDestFolderResult": {
        "enum": [
          "AllAllowed",
          "PartAllowed",
          "NoneAllowed"
        ],
        "type": "integer",
        "description": "[0 - All allowed, 1 - Part allowed, 2 - None allowed]",
        "format": "int32"
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConfigurationDto<System.Int32>": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto"
          },
          "documentType": {
            "type": "string",
            "description": "Document type",
            "nullable": true,
            "example": "some text"
          },
          "editorConfig": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto<System.Int32>"
          },
          "editorType": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "editorUrl": {
            "type": "string",
            "description": "Editor URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          },
          "type": {
            "type": "string",
            "description": "Platform type",
            "nullable": true,
            "example": "some text"
          },
          "file": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true,
            "example": "some text"
          },
          "startFilling": {
            "type": "boolean",
            "description": "Specifies if the filling has started or not",
            "nullable": true,
            "example": true
          },
          "fillingSessionId": {
            "type": "string",
            "description": "Filling session Id",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ConversationResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Operation ID",
            "nullable": true,
            "example": "some text"
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "description": "Operation progress",
            "format": "int32",
            "example": 1234
          },
          "source": {
            "type": "string",
            "description": "Source file",
            "nullable": true,
            "example": "some text"
          },
          "result": {
            "description": "Resulting file",
            "nullable": true
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "processed": {
            "type": "string",
            "description": "Specifies if the operation is processed or not",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true,
            "example": "some text"
          },
          "logo": {
            "type": "string",
            "description": "Logo",
            "nullable": true,
            "example": "some text"
          },
          "mail": {
            "type": "string",
            "description": "Mail",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "some text"
          },
          "www": {
            "type": "string",
            "description": "Www",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto<System.Int32>": {
        "type": "object",
        "properties": {
          "about": {
            "type": "boolean",
            "description": "About",
            "example": true
          },
          "customer": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomerConfigDto"
          },
          "anonymous": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.AnonymousConfigDto"
          },
          "feedback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FeedbackConfig"
          },
          "forcesave": {
            "type": "boolean",
            "description": "Forcesave",
            "nullable": true,
            "example": true
          },
          "goback": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.GobackConfig"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto"
          },
          "mentionShare": {
            "type": "boolean",
            "description": "MentionShare",
            "example": true
          },
          "reviewDisplay": {
            "type": "string",
            "description": "Review display",
            "nullable": true,
            "example": "some text"
          },
          "submitForm": {
            "type": "boolean",
            "description": "Submit form",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocServiceUrlDto": {
        "required": [
          "docServicePortalUrl",
          "docServiceUrl",
          "docServiceUrlApi",
          "docServiceUrlInternal",
          "isDefault",
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Version",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlApi": {
            "type": "string",
            "description": "Doc service url api",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrl": {
            "type": "string",
            "description": "Doc service url",
            "nullable": true,
            "example": "some text"
          },
          "docServiceUrlInternal": {
            "type": "string",
            "description": "Doc service url internal",
            "nullable": true,
            "example": "some text"
          },
          "docServicePortalUrl": {
            "type": "string",
            "description": "Doc service portal url",
            "nullable": true,
            "example": "some text"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Is default",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "example": "some text"
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "percentage": {
            "type": "integer",
            "description": "Percentage",
            "format": "int32",
            "example": 1234
          },
          "isCompleted": {
            "type": "boolean",
            "description": "Is completed",
            "example": true
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Common.Threading.DistributedTaskStatus"
          },
          "resultFileId": {
            "description": "Result file id",
            "nullable": true
          },
          "resultFileName": {
            "type": "string",
            "description": "Result file name",
            "nullable": true,
            "example": "some text"
          },
          "resultFileUrl": {
            "type": "string",
            "description": "Result file url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DocumentConfigDto": {
        "type": "object",
        "properties": {
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          },
          "info": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto"
          },
          "isLinkedForMe": {
            "type": "boolean",
            "description": "Is linked for me",
            "example": true
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "permissions": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PermissionsConfig"
          },
          "sharedLinkParam": {
            "type": "string",
            "description": "Shared link param",
            "nullable": true,
            "example": "some text"
          },
          "sharedLinkKey": {
            "type": "string",
            "description": "Shared link key",
            "nullable": true,
            "example": "some text"
          },
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.DraftLocation<System.Int32>": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "InProcess folder ID",
            "format": "int32",
            "example": 1234
          },
          "folderTitle": {
            "type": "string",
            "description": "InProcess folder title",
            "nullable": true,
            "example": "some text"
          },
          "fileId": {
            "type": "integer",
            "description": "Draft ID",
            "format": "int32",
            "example": 1234
          },
          "fileTitle": {
            "type": "string",
            "description": "Draft title",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditHistoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "File ID",
            "format": "int32",
            "example": 1234
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "versionGroup": {
            "type": "integer",
            "description": "Version group",
            "format": "int32",
            "example": 1234
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryAuthor"
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "changesHistory": {
            "type": "string",
            "description": "History changes in the string format",
            "nullable": true,
            "example": "some text"
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.EditHistoryChangesWrapper"
            },
            "description": "List of history changes",
            "nullable": true
          },
          "serverVersion": {
            "type": "string",
            "description": "Server version",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto<System.Int32>": {
        "type": "object",
        "properties": {
          "callbackUrl": {
            "type": "string",
            "description": "Callback url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "coEditing": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.CoEditingConfig"
          },
          "createUrl": {
            "type": "string",
            "description": "Create url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "customization": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto<System.Int32>"
          },
          "embedded": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EmbeddedConfig"
          },
          "encryptionKeys": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig"
          },
          "lang": {
            "type": "string",
            "description": "Lang",
            "nullable": true,
            "example": "some text"
          },
          "mode": {
            "type": "string",
            "description": "Mode",
            "nullable": true,
            "example": "some text"
          },
          "modeWrite": {
            "type": "boolean",
            "description": "Mode write",
            "example": true
          },
          "plugins": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.PluginsConfig"
          },
          "recent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.RecentConfig"
            },
            "description": "Recent",
            "nullable": true
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.TemplatesConfig"
            },
            "description": "Templates",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.UserConfig"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": true
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32",
            "example": 1234
          },
          "rootFolderId": {
            "type": "integer",
            "description": "Root folder id",
            "format": "int32",
            "example": 1234
          },
          "originId": {
            "type": "integer",
            "description": "Origin id",
            "format": "int32",
            "example": 1234
          },
          "originRoomId": {
            "type": "integer",
            "description": "Origin room id",
            "format": "int32",
            "example": 1234
          },
          "originTitle": {
            "type": "string",
            "description": "Origin title",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "description": "Origin room title",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "description": "Can share",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "EditForm": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "Security",
            "nullable": true
          },
          "folderId": {
            "type": "integer",
            "description": "Folder ID",
            "format": "int32",
            "example": 12334
          },
          "version": {
            "type": "integer",
            "description": "Version",
            "format": "int32",
            "example": 3
          },
          "versionGroup": {
            "type": "integer",
            "description": "Version group",
            "format": "int32",
            "example": 1
          },
          "contentLength": {
            "type": "string",
            "description": "Content length",
            "nullable": true,
            "example": 1234
          },
          "pureContentLength": {
            "type": "integer",
            "description": "Pure content length",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "fileStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.FileStatus"
          },
          "mute": {
            "type": "boolean",
            "description": "Muted or not",
            "example": false
          },
          "viewUrl": {
            "type": "string",
            "description": "URL to view a file",
            "format": "uri",
            "nullable": true,
            "example": "https://www.onlyoffice.com/viewfile?fileid=2221"
          },
          "webUrl": {
            "type": "string",
            "description": "Web URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "$ref": "#/components/schemas/ASC.Web.Core.Files.FileType"
          },
          "fileExst": {
            "type": "string",
            "description": "File extension",
            "nullable": true,
            "example": ".txt"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "example": "some text"
          },
          "encrypted": {
            "type": "boolean",
            "description": "Encrypted or not",
            "nullable": true,
            "example": false
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Thumbnail URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "thumbnailStatus": {
            "$ref": "#/components/schemas/ASC.Files.Core.Thumbnail"
          },
          "locked": {
            "type": "boolean",
            "description": "Locked or not",
            "nullable": true,
            "example": true
          },
          "lockedBy": {
            "type": "string",
            "description": "User ID who locked a file",
            "nullable": true,
            "example": "some text"
          },
          "denyDownload": {
            "type": "boolean",
            "description": "Denies file downloading or not",
            "example": false
          },
          "hasDraft": {
            "type": "boolean",
            "description": "Is there a draft or not",
            "nullable": true,
            "example": false
          },
          "isForm": {
            "type": "boolean",
            "description": "Is there a form or not",
            "nullable": true,
            "example": false
          },
          "startFilling": {
            "type": "boolean",
            "description": "Specifies if the filling has started or not",
            "nullable": true,
            "example": false
          },
          "inProcessFolderId": {
            "type": "integer",
            "description": "InProcess folder ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "inProcessFolderTitle": {
            "type": "string",
            "description": "InProcess folder title",
            "nullable": true,
            "example": "some text"
          },
          "draftLocation": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.DraftLocation<System.Int32>"
          },
          "denySharing": {
            "type": "boolean",
            "description": "Denies file sharing or not",
            "example": false
          },
          "viewAccessibility": {
            "type": "object",
            "properties": {
              "ImageView": {
                "type": "boolean"
              },
              "MediaView": {
                "type": "boolean"
              },
              "WebView": {
                "type": "boolean"
              },
              "WebEdit": {
                "type": "boolean"
              },
              "WebReview": {
                "type": "boolean"
              },
              "WebCustomFilterEditing": {
                "type": "boolean"
              },
              "WebRestrictedEditing": {
                "type": "boolean"
              },
              "WebComment": {
                "type": "boolean"
              },
              "CoAuhtoring": {
                "type": "boolean"
              },
              "CanConvert": {
                "type": "boolean"
              },
              "MustConvert": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "File accessibility",
            "nullable": true
          },
          "availableExternalRights": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Available external rights",
            "nullable": true
          },
          "requestToken": {
            "type": "string",
            "description": "Request token",
            "nullable": true,
            "example": "some text"
          },
          "lastOpened": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": true
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileOperationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Operation ID",
            "nullable": true,
            "example": "some text"
          },
          "Operation": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType"
          },
          "progress": {
            "type": "integer",
            "description": "Operation progress",
            "format": "int32",
            "example": 1234
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "processed": {
            "type": "string",
            "description": "Processing status",
            "nullable": true,
            "example": "1"
          },
          "finished": {
            "type": "boolean",
            "description": "Specifies if the operation is finished or not",
            "example": true
          },
          "url": {
            "type": "string",
            "description": "URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of files",
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of folders",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FileShareDto": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "sharedTo": {
            "description": "A user who has the access to the specified file",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "description": "Specifies if the file is locked by this user or not",
            "example": false
          },
          "isOwner": {
            "type": "boolean",
            "description": "Specifies if this user is an owner of the specified file or not",
            "example": true
          },
          "canEditAccess": {
            "type": "boolean",
            "description": "Spceifies if this user can edit the access to the specified file or not",
            "example": true
          },
          "subjectType": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.SubjectType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto": {
        "type": "object",
        "properties": {
          "extsImagePreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts image previewed",
            "nullable": true,
            "example": "some text"
          },
          "extsMediaPreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts media previewed",
            "nullable": true,
            "example": "some text"
          },
          "extsWebPreviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web previewed",
            "nullable": true,
            "example": "some text"
          },
          "extsWebEdited": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web edited",
            "nullable": true,
            "example": "some text"
          },
          "extsWebEncrypt": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web encrypt",
            "nullable": true,
            "example": "some text"
          },
          "extsWebReviewed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web reviewed",
            "nullable": true,
            "example": "some text"
          },
          "extsWebCustomFilterEditing": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web custom filter editing",
            "nullable": true,
            "example": "some text"
          },
          "extsWebRestrictedEditing": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web restricted editing",
            "nullable": true,
            "example": "some text"
          },
          "extsWebCommented": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web commented",
            "nullable": true,
            "example": "some text"
          },
          "extsWebTemplate": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts web template",
            "nullable": true,
            "example": "some text"
          },
          "extsCoAuthoring": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts co authoring",
            "nullable": true,
            "example": "some text"
          },
          "extsMustConvert": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts must convert",
            "nullable": true,
            "example": "some text"
          },
          "extsConvertible": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Exts convertible",
            "nullable": true
          },
          "extsUploadable": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts uploadable",
            "nullable": true,
            "example": "some text"
          },
          "extsArchive": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts archive",
            "nullable": true,
            "example": "some text"
          },
          "extsVideo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts video",
            "nullable": true,
            "example": "some text"
          },
          "extsAudio": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts audio",
            "nullable": true,
            "example": "some text"
          },
          "extsImage": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts image",
            "nullable": true,
            "example": "some text"
          },
          "extsSpreadsheet": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts spreadsheet",
            "nullable": true,
            "example": "some text"
          },
          "extsPresentation": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts presentation",
            "nullable": true,
            "example": "some text"
          },
          "extsDocument": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exts document",
            "nullable": true,
            "example": "some text"
          },
          "internalFormats": {
            "type": "object",
            "properties": {
              "Unknown": {
                "type": "string"
              },
              "Archive": {
                "type": "string"
              },
              "Video": {
                "type": "string"
              },
              "Audio": {
                "type": "string"
              },
              "Image": {
                "type": "string"
              },
              "Spreadsheet": {
                "type": "string"
              },
              "Presentation": {
                "type": "string"
              },
              "Document": {
                "type": "string"
              },
              "Pdf": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "description": "Internal formats",
            "nullable": true
          },
          "masterFormExtension": {
            "type": "string",
            "description": "Master form extension",
            "nullable": true,
            "example": "some text"
          },
          "paramVersion": {
            "type": "string",
            "description": "Param version",
            "nullable": true,
            "example": "some text"
          },
          "paramOutType": {
            "type": "string",
            "description": "Param out type",
            "nullable": true,
            "example": "some text"
          },
          "fileDownloadUrlString": {
            "type": "string",
            "description": "File download url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebViewerUrlString": {
            "type": "string",
            "description": "File web viewer url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebViewerExternalUrlString": {
            "type": "string",
            "description": "File web viewer external url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebEditorUrlString": {
            "type": "string",
            "description": "File web editor url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileWebEditorExternalUrlString": {
            "type": "string",
            "description": "File web editor external url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileRedirectPreviewUrlString": {
            "type": "string",
            "description": "File redirect preview url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileThumbnailUrlString": {
            "type": "string",
            "description": "File thumbnail url string",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "confirmDelete": {
            "type": "boolean",
            "description": "Confirm delete",
            "example": true
          },
          "enableThirdParty": {
            "type": "boolean",
            "description": "EnableT third party",
            "example": true
          },
          "externalShare": {
            "type": "boolean",
            "description": "External share",
            "example": true
          },
          "externalShareSocialMedia": {
            "type": "boolean",
            "description": "External share social media",
            "example": true
          },
          "storeOriginalFiles": {
            "type": "boolean",
            "description": "Store original files",
            "example": true
          },
          "keepNewFileName": {
            "type": "boolean",
            "description": "Keep new file name",
            "example": true
          },
          "convertNotify": {
            "type": "boolean",
            "description": "Convert notify",
            "example": true
          },
          "hideConfirmConvertSave": {
            "type": "boolean",
            "description": "HideC confirm convert save",
            "example": true
          },
          "hideConfirmConvertOpen": {
            "type": "boolean",
            "description": "Hide confirm convert open",
            "example": true
          },
          "defaultOrder": {
            "$ref": "#/components/schemas/ASC.Files.Core.OrderBy"
          },
          "forcesave": {
            "type": "boolean",
            "description": "Forcesave",
            "example": true
          },
          "storeForcesave": {
            "type": "boolean",
            "description": "Store forcesave",
            "example": true
          },
          "recentSection": {
            "type": "boolean",
            "description": "Recent section",
            "example": true
          },
          "favoritesSection": {
            "type": "boolean",
            "description": "Favorites section",
            "example": true
          },
          "templatesSection": {
            "type": "boolean",
            "description": "Templates section",
            "example": true
          },
          "downloadTarGz": {
            "type": "boolean",
            "description": "Download tar gz",
            "example": true
          },
          "automaticallyCleanUp": {
            "$ref": "#/components/schemas/ASC.Files.Core.AutoCleanUpData"
          },
          "canSearchByContent": {
            "type": "boolean",
            "description": "Can search by content",
            "example": true
          },
          "defaultSharingAccessRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
            },
            "description": "Default sharing access rights",
            "nullable": true,
            "example": "None"
          },
          "maxUploadThreadCount": {
            "type": "integer",
            "description": "Max upload thread count",
            "format": "int32",
            "example": 1234
          },
          "chunkUploadSize": {
            "type": "integer",
            "description": "Chunk upload size",
            "format": "int64",
            "example": 1234
          },
          "openEditorInSameTab": {
            "type": "boolean",
            "description": "Open editor in same tab",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Folder title",
            "nullable": true,
            "example": "some text"
          },
          "usedSpace": {
            "type": "integer",
            "description": "Used space",
            "format": "int64",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsResultDto": {
        "type": "object",
        "properties": {
          "myDocumentsUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "trashUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "archiveUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          },
          "roomsUsedSpace": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FilesStatisticsFolder"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FillingFormResultDto<System.Int32>": {
        "type": "object",
        "properties": {
          "formNumber": {
            "type": "integer",
            "description": "Form number",
            "format": "int32",
            "example": 1234
          },
          "completedForm": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
          },
          "originalForm": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileDto<System.Int32>"
          },
          "manager": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
          },
          "roomId": {
            "type": "integer",
            "description": "Room Id",
            "format": "int32",
            "example": 1234
          },
          "isRoomMember": {
            "type": "boolean",
            "description": "Is room member",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderContentDto<System.Int32>": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of files",
            "nullable": true
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileEntryDto"
            },
            "description": "List of folders",
            "nullable": true
          },
          "current": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>"
          },
          "pathParts": {
            "description": "Folder path",
            "nullable": true
          },
          "startIndex": {
            "type": "integer",
            "description": "Folder start index",
            "format": "int32",
            "example": 1234
          },
          "count": {
            "type": "integer",
            "description": "Number of folder elements",
            "format": "int32",
            "example": 1234
          },
          "total": {
            "type": "integer",
            "description": "Total number of elements in the folder",
            "format": "int32",
            "example": 1234
          },
          "new": {
            "type": "integer",
            "description": "New element index",
            "format": "int32",
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.Int32>": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": true
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32",
            "example": 1234
          },
          "rootFolderId": {
            "type": "integer",
            "description": "Root folder id",
            "format": "int32",
            "example": 1234
          },
          "originId": {
            "type": "integer",
            "description": "Origin id",
            "format": "int32",
            "example": 1234
          },
          "originRoomId": {
            "type": "integer",
            "description": "Origin room id",
            "format": "int32",
            "example": 1234
          },
          "originTitle": {
            "type": "string",
            "description": "Origin title",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "description": "Origin room title",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "description": "Can share",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "EditForm": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "Security",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "description": "Parent folder ID",
            "format": "int32",
            "example": 10
          },
          "filesCount": {
            "type": "integer",
            "description": "Number of files",
            "format": "int32",
            "example": 5
          },
          "foldersCount": {
            "type": "integer",
            "description": "Number of folders",
            "format": "int32",
            "example": 7
          },
          "isShareable": {
            "type": "boolean",
            "description": "Specifies if a folder is shareable or not",
            "nullable": true,
            "example": false
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Specifies if a folder is favorite or not",
            "nullable": true,
            "example": false
          },
          "new": {
            "type": "integer",
            "description": "Number for a new folder",
            "format": "int32",
            "example": 1234
          },
          "mute": {
            "type": "boolean",
            "description": "Specifies if a folder is muted or not",
            "example": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags",
            "nullable": true,
            "example": "some text"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean",
            "description": "Specifies if a folder is pinned or not",
            "example": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Specifies if a folder is private or not",
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "inRoom": {
            "type": "boolean",
            "description": "InRoom",
            "nullable": true,
            "example": true
          },
          "quotaLimit": {
            "type": "integer",
            "description": "Quota",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "isCustomQuota": {
            "type": "boolean",
            "description": "Specifies if the room has a custom quota or not",
            "nullable": true,
            "example": true
          },
          "usedSpace": {
            "type": "integer",
            "description": "Counter",
            "format": "int64",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.FolderDto<System.String>": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "access": {
            "$ref": "#/components/schemas/ASC.Files.Core.Security.FileShare"
          },
          "shared": {
            "type": "boolean",
            "description": "Specifies if the file is shared or not",
            "example": true
          },
          "created": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "updated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "autoDelete": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "rootFolderType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "parentRoomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "providerItem": {
            "type": "boolean",
            "description": "Provider is specified or not",
            "nullable": true,
            "example": true
          },
          "providerKey": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "order": {
            "type": "string",
            "description": "Order",
            "nullable": true,
            "example": "some text"
          },
          "id": {
            "type": "string",
            "description": "Id",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "rootFolderId": {
            "type": "string",
            "description": "Root folder id",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "originId": {
            "type": "string",
            "description": "Origin id",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "originRoomId": {
            "type": "string",
            "description": "Origin room id",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "originTitle": {
            "type": "string",
            "description": "Origin title",
            "nullable": true,
            "example": "some text"
          },
          "originRoomTitle": {
            "type": "string",
            "description": "Origin room title",
            "nullable": true,
            "example": "some text"
          },
          "canShare": {
            "type": "boolean",
            "description": "Can share",
            "example": true
          },
          "security": {
            "type": "object",
            "properties": {
              "Read": {
                "type": "boolean"
              },
              "Comment": {
                "type": "boolean"
              },
              "FillForms": {
                "type": "boolean"
              },
              "Review": {
                "type": "boolean"
              },
              "Create": {
                "type": "boolean"
              },
              "Edit": {
                "type": "boolean"
              },
              "Delete": {
                "type": "boolean"
              },
              "CustomFilter": {
                "type": "boolean"
              },
              "EditRoom": {
                "type": "boolean"
              },
              "Rename": {
                "type": "boolean"
              },
              "ReadHistory": {
                "type": "boolean"
              },
              "Lock": {
                "type": "boolean"
              },
              "EditHistory": {
                "type": "boolean"
              },
              "CopyTo": {
                "type": "boolean"
              },
              "Copy": {
                "type": "boolean"
              },
              "MoveTo": {
                "type": "boolean"
              },
              "Move": {
                "type": "boolean"
              },
              "Pin": {
                "type": "boolean"
              },
              "Mute": {
                "type": "boolean"
              },
              "EditAccess": {
                "type": "boolean"
              },
              "Duplicate": {
                "type": "boolean"
              },
              "SubmitToFormGallery": {
                "type": "boolean"
              },
              "Download": {
                "type": "boolean"
              },
              "Convert": {
                "type": "boolean"
              },
              "CopySharedLink": {
                "type": "boolean"
              },
              "ReadLinks": {
                "type": "boolean"
              },
              "Reconnect": {
                "type": "boolean"
              },
              "CreateRoomFrom": {
                "type": "boolean"
              },
              "EditForm": {
                "type": "boolean"
              },
              "CopyLink": {
                "type": "boolean"
              },
              "Embed": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "description": "Security",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "description": "Parent folder ID",
            "format": "int32",
            "nullable": true,
            "example": 10
          },
          "filesCount": {
            "type": "integer",
            "description": "Number of files",
            "format": "int32",
            "example": 5
          },
          "foldersCount": {
            "type": "integer",
            "description": "Number of folders",
            "format": "int32",
            "example": 7
          },
          "isShareable": {
            "type": "boolean",
            "description": "Specifies if a folder is shareable or not",
            "nullable": true,
            "example": false
          },
          "isFavorite": {
            "type": "boolean",
            "description": "Specifies if a folder is favorite or not",
            "nullable": true,
            "example": false
          },
          "new": {
            "type": "integer",
            "description": "Number for a new folder",
            "format": "int32",
            "example": 1234
          },
          "mute": {
            "type": "boolean",
            "description": "Specifies if a folder is muted or not",
            "example": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags",
            "nullable": true,
            "example": "some text"
          },
          "logo": {
            "$ref": "#/components/schemas/ASC.Files.Core.VirtualRooms.Logo"
          },
          "pinned": {
            "type": "boolean",
            "description": "Specifies if a folder is pinned or not",
            "example": true
          },
          "roomType": {
            "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.RequestDto.RoomType"
          },
          "private": {
            "type": "boolean",
            "description": "Specifies if a folder is private or not",
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Files.Core.FolderType"
          },
          "inRoom": {
            "type": "boolean",
            "description": "InRoom",
            "nullable": true,
            "example": true
          },
          "quotaLimit": {
            "type": "integer",
            "description": "Quota",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "isCustomQuota": {
            "type": "boolean",
            "description": "Specifies if the room has a custom quota or not",
            "nullable": true,
            "example": true
          },
          "usedSpace": {
            "type": "integer",
            "description": "Counter",
            "format": "int64",
            "nullable": true,
            "example": 1234
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.HistoryDto": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ASC.Files.Core.Core.Entries.HistoryAction"
          },
          "initiator": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
          },
          "date": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "data": {
            "$ref": "#/components/schemas/ASC.Files.Core.Core.Entries.HistoryData"
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"
            },
            "description": "Related",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "Favorite",
            "nullable": true,
            "example": true
          },
          "folder": {
            "type": "string",
            "description": "Folder",
            "nullable": true,
            "example": "some text"
          },
          "owner": {
            "type": "string",
            "description": "Owner",
            "nullable": true,
            "example": "some text"
          },
          "sharingSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Files.Services.WCFService.AceShortWrapper"
            },
            "description": "Sharing settings",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.EditorType"
          },
          "uploaded": {
            "type": "string",
            "description": "Uploaded",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.LinkType": {
        "enum": [
          "Invitation",
          "External"
        ],
        "type": "integer",
        "description": "[0 - Invitation, 1 - External]",
        "format": "int32"
      },
      "ASC.Files.Core.ApiModels.ResponseDto.LogoConfigDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Image",
            "nullable": true,
            "example": "some text"
          },
          "imageDark": {
            "type": "string",
            "description": "Image dark",
            "nullable": true,
            "example": "some text"
          },
          "imageEmbedded": {
            "type": "string",
            "description": "Image embedded",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "visible": {
            "type": "boolean",
            "description": "Visible",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.ProviderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Provider name",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          },
          "connected": {
            "type": "boolean",
            "description": "Connected flag",
            "example": true
          },
          "oauth": {
            "type": "boolean",
            "description": "Oauth flag",
            "example": true
          },
          "redirectUrl": {
            "type": "string",
            "description": "Redirect url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "requiredConnectionUrl": {
            "type": "boolean",
            "description": "Required connection url flag",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.RoomSecurityDto": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"
            },
            "description": "List of room members",
            "nullable": true
          },
          "warning": {
            "type": "string",
            "description": "Warning",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ApiModels.ResponseDto.UploadResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Specifies if the operation is successful or not",
            "example": true
          },
          "data": {
            "description": "Data",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.AuthData": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "Login",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "rawToken": {
            "type": "string",
            "description": "Raw token",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "provider": {
            "type": "string",
            "description": "Provider",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "$ref": "#/components/schemas/ASC.FederatedLogin.OAuth20Token"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.AutoCleanUpData": {
        "type": "object",
        "properties": {
          "isAutoCleanUp": {
            "type": "boolean",
            "description": "Specifies if the auto-clearing setting is enabled or not",
            "example": true
          },
          "gap": {
            "$ref": "#/components/schemas/ASC.Files.Core.DateToAutoCleanUp"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.ApplyFilterOption": {
        "enum": [
          "All",
          "Files",
          "Folders"
        ],
        "type": "integer",
        "description": "[0 - All, 1 - Files, 2 - Folders]",
        "format": "int32"
      },
      "ASC.Files.Core.Core.Entries.HistoryAction": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ASC.MessagingSystem.Core.MessageAction"
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.Entries.HistoryData": {
        "type": "object",
        "additionalProperties": false
      },
      "ASC.Files.Core.Core.StorageFilter": {
        "enum": [
          "None",
          "Internal",
          "ThirdParty"
        ],
        "type": "integer",
        "description": "[0 - None, 1 - Internal, 2 - ThirdParty]",
        "format": "int32"
      },
      "ASC.Files.Core.Core.SubjectFilter": {
        "enum": [
          "Owner",
          "Member"
        ],
        "type": "integer",
        "description": "[0 - Owner, 1 - Member]",
        "format": "int32"
      },
      "ASC.Files.Core.DateToAutoCleanUp": {
        "enum": [
          "OneWeek",
          "TwoWeeks",
          "OneMonth",
          "ThirtyDays",
          "TwoMonths",
          "ThreeMonths"
        ],
        "type": "integer",
        "description": "[1 - One week, 2 - Two weeks, 3 - One month, 4 - Thirty days, 5 - Two months, 6 - Three months]",
        "format": "int32"
      },
      "ASC.Files.Core.EditHistoryAuthor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryDataDto": {
        "type": "object",
        "properties": {
          "changesUrl": {
            "type": "string",
            "description": "URL to the file changes",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "previous": {
            "$ref": "#/components/schemas/ASC.Files.Core.EditHistoryUrl"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "File URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "version": {
            "type": "integer",
            "description": "File version",
            "format": "int32",
            "example": 1234
          },
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.EditHistoryUrl": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.FileStatus": {
        "enum": [
          "None",
          "IsEditing",
          "IsNew",
          "IsConverting",
          "IsOriginal",
          "IsEditingAlone",
          "IsFavorite",
          "IsTemplate",
          "IsFillFormDraft"
        ],
        "type": "integer",
        "description": "[0 - None, 1 - Is editing, 2 - Is new, 4 - Is converting, 8 - Is original, 16 - Is editing alone, 32 - Is favorite, 64 - Is template, 128 - Is fill form draft]",
        "format": "int32"
      },
      "ASC.Files.Core.FilterType": {
        "enum": [
          "None",
          "FilesOnly",
          "FoldersOnly",
          "DocumentsOnly",
          "PresentationsOnly",
          "SpreadsheetsOnly",
          "ImagesOnly",
          "ByUser",
          "ByDepartment",
          "ArchiveOnly",
          "ByExtension",
          "MediaOnly",
          "FillingFormsRooms",
          "EditingRooms",
          "ReviewRooms",
          "ReadOnlyRooms",
          "CustomRooms",
          "PublicRooms",
          "FormRooms",
          "Pdf",
          "PdfForm"
        ],
        "type": "integer",
        "description": "[0 - None, 1 - Files  only, 2 - Folders only, 3 - Documents only, 4 - Presentations only, 5 - Spreadsheets only, 7 - Images only, 8 - By user, 9 - By department, 10 - Archive only, 11 - By extension, 12 - Media only, 13 - Filling forms rooms, 14 - Editing rooms, 15 - Review rooms, 16 - Read only rooms, 17 - Custom rooms, 20 - Public rooms, 21 - Form rooms, 22 - Pdf, 23 - Pdf form]",
        "format": "int32"
      },
      "ASC.Files.Core.FolderType": {
        "enum": [
          "DEFAULT",
          "COMMON",
          "BUNCH",
          "TRASH",
          "USER",
          "SHARE",
          "Projects",
          "Favorites",
          "Recent",
          "Templates",
          "Privacy",
          "VirtualRooms",
          "FillingFormsRoom",
          "EditingRoom",
          "ReviewRoom",
          "ReadOnlyRoom",
          "CustomRoom",
          "Archive",
          "ThirdpartyBackup",
          "PublicRoom",
          "FormRoom",
          "ReadyFormFolder",
          "InProcessFormFolder",
          "FormFillingFolderDone",
          "FormFillingFolderInProgress"
        ],
        "type": "integer",
        "description": "[0 - Default, 1 - Coomon, 2 - Bunch, 3 - Trash, 5 - User, 6 - Share, 8 - Projects, 10 - Favourites, 11 - Recent, 12 - Templates, 13 - Privacy, 14 - Virtual rooms, 15 - Filling forms room, 16 - Editing room, 17 - Review room, 18 - Read only room, 19 - Custom room, 20 - Archive, 21 - Thirdparty backup, 22 - Public room, 24 - Form room, 25 - Ready form folder, 26 - In process form folder, 27 - Form filling folder done, 28 - Form filling folder in progress]",
        "format": "int32"
      },
      "ASC.Files.Core.Helpers.DocumentService_FileLink": {
        "type": "object",
        "properties": {
          "filetype": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.OrderBy": {
        "type": "object",
        "properties": {
          "is_asc": {
            "type": "boolean",
            "description": "Is asc",
            "example": true
          },
          "property": {
            "$ref": "#/components/schemas/ASC.Files.Core.SortedByType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.ProviderFilter": {
        "enum": [
          "None",
          "Box",
          "DropBox",
          "GoogleDrive",
          "kDrive",
          "OneDrive",
          "SharePoint",
          "WebDav",
          "Yandex",
          "Storage"
        ],
        "type": "integer",
        "description": "[0 - None, 1 - Box, 2 - DropBox, 3 - GoogleDrive, 4 - kDrive, 5 - OneDrive, 6 - SharePoint, 7 - WebDav, 8 - Yandex, 9 - Storage]",
        "format": "int32"
      },
      "ASC.Files.Core.Security.FileShare": {
        "enum": [
          "None",
          "ReadWrite",
          "Read",
          "Restrict",
          "Varies",
          "Review",
          "Comment",
          "FillForms",
          "CustomFilter",
          "RoomAdmin",
          "Editing",
          "PowerUser"
        ],
        "type": "integer",
        "description": "[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room admin, 10 - Editing, 11 - Power user]",
        "format": "int32"
      },
      "ASC.Files.Core.Security.ShareFilterType": {
        "enum": [
          "UserOrGroup",
          "InvitationLink",
          "ExternalLink",
          "AdditionalExternalLink",
          "PrimaryExternalLink",
          "User",
          "Group"
        ],
        "type": "integer",
        "description": "[0 - User or group, 1 - Invitation link, 2 - External link, 4 - Additional external link, 8 - Primary external link, 16 - User, 32 - Group]",
        "format": "int32"
      },
      "ASC.Files.Core.Security.SubjectType": {
        "enum": [
          "User",
          "ExternalLink",
          "Group",
          "InvitationLink",
          "PrimaryExternalLink"
        ],
        "type": "integer",
        "description": "[0 - User, 1 - External link, 2 - Group, 3 - Invitation link, 4 - Primary external link]",
        "format": "int32"
      },
      "ASC.Files.Core.SortedByType": {
        "enum": [
          "DateAndTime",
          "AZ",
          "Size",
          "Author",
          "Type",
          "New",
          "DateAndTimeCreation",
          "RoomType",
          "Tags",
          "Room",
          "CustomOrder",
          "LastOpened",
          "UsedSpace"
        ],
        "type": "integer",
        "description": "[0 - Date and time, 1 - AZ, 2 - Size, 3 - Author, 4 - Type, 5 - New, 6 - Date and time creation, 7 - Room type, 8 - Tags, 9 - Room, 10 - Custom order, 11 - Last opened, 12 - Used space]",
        "format": "int32"
      },
      "ASC.Files.Core.Thumbnail": {
        "enum": [
          "Waiting",
          "Created",
          "Error",
          "NotRequired",
          "Creating"
        ],
        "type": "integer",
        "description": "[0 - Waiting, 1 - Created, 2 - Error, 3 - Not required, 4 - Creating]",
        "format": "int32"
      },
      "ASC.Files.Core.VirtualRooms.Logo": {
        "type": "object",
        "properties": {
          "original": {
            "type": "string",
            "description": "Original",
            "nullable": true,
            "example": "some text"
          },
          "large": {
            "type": "string",
            "description": "Large",
            "nullable": true,
            "example": "some text"
          },
          "medium": {
            "type": "string",
            "description": "Medium",
            "nullable": true,
            "example": "some text"
          },
          "small": {
            "type": "string",
            "description": "Small",
            "nullable": true,
            "example": "some text"
          },
          "color": {
            "type": "string",
            "description": "Color",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Files.Core.VirtualRooms.SearchArea": {
        "enum": [
          "Active",
          "Archive",
          "Any",
          "RecentByLinks"
        ],
        "type": "integer",
        "description": "[0 - Active, 1 - Archive, 2 - Any, 3 - Recent by links]",
        "format": "int32"
      },
      "ASC.MessagingSystem.Core.MessageAction": {
        "enum": [
          "LoginSuccess",
          "LoginSuccessViaSocialAccount",
          "LoginFailInvalidCombination",
          "LoginFailSocialAccountNotFound",
          "LoginFailDisabledProfile",
          "LoginFail",
          "Logout",
          "LoginSuccessViaSms",
          "LoginFailViaSms",
          "LoginFailIpSecurity",
          "LoginSuccessViaApi",
          "LoginSuccessViaSocialApp",
          "LoginSuccessViaApiSms",
          "LoginFailViaApi",
          "LoginFailViaApiSms",
          "LoginSuccessViaSSO",
          "SessionStarted",
          "SessionCompleted",
          "LoginFailViaSSO",
          "LoginSuccessViaApiSocialAccount",
          "LoginFailViaApiSocialAccount",
          "LoginSuccesViaTfaApp",
          "LoginFailViaTfaApp",
          "LoginFailBruteForce",
          "LoginSuccessViaApiTfa",
          "LoginFailViaApiTfa",
          "LoginFailRecaptcha",
          "UserCreated",
          "GuestCreated",
          "UserCreatedViaInvite",
          "GuestCreatedViaInvite",
          "UserActivated",
          "GuestActivated",
          "UserUpdated",
          "UserUpdatedLanguage",
          "UserAddedAvatar",
          "UserDeletedAvatar",
          "UserUpdatedAvatarThumbnails",
          "UserLinkedSocialAccount",
          "UserUnlinkedSocialAccount",
          "UserSentActivationInstructions",
          "UserSentEmailChangeInstructions",
          "UserSentPasswordChangeInstructions",
          "UserSentDeleteInstructions",
          "UserUpdatedPassword",
          "UserDeleted",
          "UsersUpdatedType",
          "UsersUpdatedStatus",
          "UsersSentActivationInstructions",
          "UsersDeleted",
          "SentInviteInstructions",
          "UserImported",
          "GuestImported",
          "GroupCreated",
          "GroupUpdated",
          "GroupDeleted",
          "UserUpdatedMobileNumber",
          "UserDataReassigns",
          "UserDataRemoving",
          "UserConnectedTfaApp",
          "UserDisconnectedTfaApp",
          "UserLogoutActiveConnections",
          "UserLogoutActiveConnection",
          "UserLogoutActiveConnectionsForUser",
          "SendJoinInvite",
          "FileCreated",
          "FileRenamed",
          "FileUpdated",
          "FileCreatedVersion",
          "FileDeletedVersion",
          "FileUpdatedRevisionComment",
          "FileLocked",
          "FileUnlocked",
          "FileUpdatedAccess",
          "FileDownloaded",
          "FileDownloadedAs",
          "FileUploaded",
          "FileImported",
          "FileCopied",
          "FileCopiedWithOverwriting",
          "FileMoved",
          "FileMovedWithOverwriting",
          "FileMovedToTrash",
          "FileDeleted",
          "FolderCreated",
          "FolderRenamed",
          "FolderUpdatedAccess",
          "FolderCopied",
          "FolderCopiedWithOverwriting",
          "FolderMoved",
          "FolderMovedWithOverwriting",
          "FolderMovedToTrash",
          "FolderDeleted",
          "ThirdPartyCreated",
          "ThirdPartyUpdated",
          "ThirdPartyDeleted",
          "DocumentsThirdPartySettingsUpdated",
          "DocumentsOverwritingSettingsUpdated",
          "DocumentsUploadingFormatsSettingsUpdated",
          "UserFileUpdated",
          "FileConverted",
          "FileSendAccessLink",
          "DocumentServiceLocationSetting",
          "AuthorizationKeysSetting",
          "FullTextSearchSetting",
          "StartTransferSetting",
          "StartBackupSetting",
          "LicenseKeyUploaded",
          "FileChangeOwner",
          "FileRestoreVersion",
          "DocumentSendToSign",
          "DocumentSignComplete",
          "UserUpdatedEmail",
          "DocumentsStoreForcesave",
          "DocumentsForcesave",
          "StartStorageEncryption",
          "PrivacyRoomEnable",
          "PrivacyRoomDisable",
          "StartStorageDecryption",
          "FileOpenedForChange",
          "FileMarkedAsFavorite",
          "FileRemovedFromFavorite",
          "FolderDownloaded",
          "FileRemovedFromList",
          "FolderRemovedFromList",
          "FileExternalLinkAccessUpdated",
          "TrashEmptied",
          "FileRevisionDownloaded",
          "FileMarkedAsRead",
          "FileReaded",
          "FolderMarkedAsRead",
          "FolderUpdatedAccessFor",
          "FileUpdatedAccessFor",
          "DocumentsExternalShareSettingsUpdated",
          "RoomCreated",
          "RoomRenamed",
          "RoomArchived",
          "RoomUnarchived",
          "RoomDeleted",
          "RoomUpdateAccessForUser",
          "TagCreated",
          "TagsDeleted",
          "AddedRoomTags",
          "DeletedRoomTags",
          "RoomLogoCreated",
          "RoomLogoDeleted",
          "RoomInvitationLinkUpdated",
          "DocumentsKeepNewFileNameSettingsUpdated",
          "RoomRemoveUser",
          "RoomCreateUser",
          "RoomInvitationLinkCreated",
          "RoomInvitationLinkDeleted",
          "RoomExternalLinkCreated",
          "RoomExternalLinkUpdated",
          "RoomExternalLinkDeleted",
          "FileExternalLinkCreated",
          "FileExternalLinkUpdated",
          "FileExternalLinkDeleted",
          "RoomGroupAdded",
          "RoomUpdateAccessForGroup",
          "RoomGroupRemove",
          "RoomExternalLinkRevoked",
          "RoomExternalLinkRenamed",
          "FileUploadedWithOverwriting",
          "RoomCopied",
          "LanguageSettingsUpdated",
          "TimeZoneSettingsUpdated",
          "DnsSettingsUpdated",
          "TrustedMailDomainSettingsUpdated",
          "PasswordStrengthSettingsUpdated",
          "TwoFactorAuthenticationSettingsUpdated",
          "AdministratorMessageSettingsUpdated",
          "DefaultStartPageSettingsUpdated",
          "ProductsListUpdated",
          "AdministratorAdded",
          "AdministratorOpenedFullAccess",
          "AdministratorDeleted",
          "UsersOpenedProductAccess",
          "GroupsOpenedProductAccess",
          "ProductAccessOpened",
          "ProductAccessRestricted",
          "ProductAddedAdministrator",
          "ProductDeletedAdministrator",
          "GreetingSettingsUpdated",
          "TeamTemplateChanged",
          "ColorThemeChanged",
          "OwnerSentChangeOwnerInstructions",
          "OwnerUpdated",
          "OwnerSentPortalDeactivationInstructions",
          "OwnerSentPortalDeleteInstructions",
          "PortalDeactivated",
          "PortalDeleted",
          "LoginHistoryReportDownloaded",
          "AuditTrailReportDownloaded",
          "SSOEnabled",
          "SSODisabled",
          "PortalAccessSettingsUpdated",
          "CookieSettingsUpdated",
          "MailServiceSettingsUpdated",
          "CustomNavigationSettingsUpdated",
          "AuditSettingsUpdated",
          "TwoFactorAuthenticationDisabled",
          "TwoFactorAuthenticationEnabledBySms",
          "TwoFactorAuthenticationEnabledByTfaApp",
          "PortalRenamed",
          "QuotaPerRoomChanged",
          "QuotaPerRoomDisabled",
          "QuotaPerUserChanged",
          "QuotaPerUserDisabled",
          "QuotaPerPortalChanged",
          "QuotaPerPortalDisabled",
          "FormSubmit",
          "FormOpenedForFilling",
          "CustomQuotaPerRoomDefault",
          "CustomQuotaPerRoomChanged",
          "CustomQuotaPerRoomDisabled",
          "CustomQuotaPerUserDefault",
          "CustomQuotaPerUserChanged",
          "CustomQuotaPerUserDisabled",
          "ContactAdminMailSent",
          "RoomInviteLinkUsed",
          "UserCreatedAndAddedToRoom",
          "GuestCreatedAndAddedToRoom",
          "ContactSalesMailSent",
          "None"
        ],
        "type": "integer",
        "description": "[1000 - Login success, 1001 - Login success via social account, 1002 - Login fail invalid combination, 1003 - Login fail social account not found, 1004 - Login fail disabled profile, 1005 - Login fail, 1006 - Logout, 1007 - Login success via sms, 1008 - Login fail via sms, 1009 - Login fail ip security, 1010 - Login success via api, 1011 - Login success via social app, 1012 - Login success via api sms, 1013 - Login fail via api, 1014 - Login fail via api sms, 1015 - Login success via SSO, 1016 - Session started, 1017 - Session completed, 1018 - Login fail via SSO, 1019 - Login success via api social account, 1020 - Login fail via api social account, 1021 - Login succes via tfa app, 1022 - Login fail via Tfa app, 1023 - Login fail brute force, 1024 - Login success via api tfa, 1025 - Login fail via api tfa, 1026 - Login fail recaptcha, 4000 - User created, 4001 - Guest created, 4002 - User created via invite, 4003 - Guest created via invite, 4004 - User activated, 4005 - Guest activated, 4006 - User updated, 4007 - User updated language, 4008 - User added avatar, 4009 - User deleted avatar, 4010 - User updated avatar thumbnails, 4011 - User linked social account, 4012 - User unlinked social account, 4013 - User sent activation instructions, 4014 - User sent email change instructions, 4015 - User sent password change instructions, 4016 - User sent delete instructions, 4017 - User updated password, 4018 - User deleted, 4019 - Users updated type, 4020 - Users updated status, 4021 - Users sent activation instructions, 4022 - Users deleted, 4023 - Sent invite instructions, 4024 - User imported, 4025 - Guest imported, 4026 - Group created, 4027 - Group updated, 4028 - Group deleted, 4029 - User updated mobile number, 4030 - User data reassigns, 4031 - User data removing, 4032 - User connected tfa app, 4033 - User disconnected tfa app, 4034 - User logout active connections, 4035 - User logout active connection, 4036 - User logout active connections for user, 4037 - Send join invite, 5000 - File created, 5001 - File renamed, 5002 - File updated, 5003 - File created version, 5004 - File deleted version, 5005 - File updated revision comment, 5006 - File locked, 5007 - File unlocked, 5008 - File updated access, 5009 - File downloaded, 5010 - File downloaded as, 5011 - File uploaded, 5012 - File imported, 5013 - File copied, 5014 - File copied with overwriting, 5015 - File moved, 5016 - File moved with overwriting, 5017 - File moved to trash, 5018 - File deleted, 5019 - Folder created, 5020 - Folder renamed, 5021 - Folder updated access, 5022 - Folder copied, 5023 - Folder copied with overwriting, 5024 - Folder moved, 5025 - Folder moved with overwriting, 5026 - Folder moved to trash, 5027 - Folder deleted, 5028 - ThirdParty created, 5029 - ThirdParty updated, 5030 - ThirdParty deleted, 5031 - Documents ThirdParty settings updated, 5032 - Documents overwriting settings updated, 5033 - Documents uploading formats settings updated, 5034 - User file updated, 5035 - File converted, 5036 - File send access link, 5037 - Document service location setting, 5038 - Authorization keys setting, 5039 - Full text search setting, 5040 - Start transfer setting, 5041 - Start backup setting, 5042 - License key uploaded, 5043 - File change owner, 5044 - File restore version, 5045 - Document send to sign, 5046 - Document sign complete, 5047 - User updated email, 5048 - Documents store forcesave, 5049 - Documents forcesave, 5050 - Start storage encryption, 5051 - Privacy room enable, 5052 - Privacy room disable, 5053 - Start storage decryption, 5054 - File opened for change, 5055 - File marked as favorite, 5056 - File removed from favorite, 5057 - Folder downloaded, 5058 - File removed from list, 5059 - Folder removed from list, 5060 - File external link access updated, 5061 - Trash emptied, 5062 - File revision downloaded, 5063 - File marked as read, 5064 - File readed, 5065 - Folder marked as read, 5066 - Folder updated access for, 5068 - File updated access for, 5069 - Documents external share settings updated, 5070 - Room created, 5071 - Room renamed, 5072 - Room archived, 5073 - Room unarchived, 5074 - Room deleted, 5075 - Room update access for user, 5076 - Tag created, 5077 - Tags deleted, 5078 - Added room tags, 5079 - Deleted room tags, 5080 - Room logo created, 5081 - Room logo deleted, 5082 - Room invitation link updated, 5083 - Documents keep new file name settings updated, 5084 - Room remove user, 5085 - Room create user, 5086 - Room invitation link created, 5087 - Room invitation link deleted, 5088 - Room external link created, 5089 - Room external link updated, 5090 - Room external link deleted, 5091 - File external link created, 5092 - File external link updated, 5093 - File external link deleted, 5094 - Room group added, 5095 - Room update access for group, 5096 - Room group remove, 5097 - Room external link revoked, 5098 - Room external link renamed, 5099 - File uploaded with overwriting, 5100 - Room copied, 6000 - Language settings updated, 6001 - Time zone settings updated, 6002 - Dns settings updated, 6003 - Trusted mail domain settings updated, 6004 - Password strength settings updated, 6005 - Two factor authentication settings updated, 6006 - Administrator message settings updated, 6007 - Default start page settings updated, 6008 - Products list updated, 6009 - Administrator added, 6010 - Administrator opened full access, 6011 - Administrator deleted, 6012 - Users opened product access, 6013 - Groups opened product access, 6014 - Product access opened, 6015 - Product access restricted, 6016 - Product added administrator, 6017 - Product deleted administrator, 6018 - Greeting settings updated, 6019 - Team template changed, 6020 - Color theme changed, 6021 - Owner sent change owner instructions, 6022 - Owner updated, 6023 - Owner sent portal deactivation instructions, 6024 - Owner sent portal delete instructions, 6025 - Portal deactivated, 6026 - Portal deleted, 6027 - Login history report downloaded, 6028 - Audit trail report downloaded, 6029 - SSO enabled, 6030 - SSO disabled, 6031 - Portal access settings updated, 6032 - Cookie settings updated, 6033 - Mail service settings updated, 6034 - Custom navigation settings updated, 6035 - Audit settings updated, 6036 - Two factor authentication disabled, 6037 - Two factor authentication enabled by sms, 6038 - Two factor authentication enabled by tfa app, 6039 - Portal renamed, 6040 - Quota per room changed, 6041 - Quota per room disabled, 6042 - Quota per user changed, 6043 - Quota per user disabled, 6044 - Quota per portal changed, 6045 - Quota per portal disabled, 6046 - Form submit, 6047 - Form opened for filling, 6048 - Custom quota per room default, 6049 - Custom quota per room changed, 6050 - Custom quota per room disabled, 6051 - Custom quota per user default, 6052 - Custom quota per user changed, 6053 - Custom quota per user disabled, 7000 - Contact admin mail sent, 7001 - Room invite link used, 7002 - User created and added to room, 7003 - Guest created and added to room, 7004 - Contact sales mail sent, -1 - None]",
        "format": "int32"
      },
      "ASC.Web.Api.Models.Contact": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Contact type",
            "nullable": true,
            "example": "GTalk"
          },
          "value": {
            "type": "string",
            "description": "Contact value",
            "nullable": true,
            "example": "my@gmail.com"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "description": "Original size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "description": "Maximum size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "description": "Medium size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "description": "Small avatar",
            "nullable": true,
            "example": "some text"
          },
          "profileUrl": {
            "type": "string",
            "description": "Profile URL",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "description": "Specifies if the user has an avatar or not",
            "example": true
          },
          "isAnonim": {
            "type": "boolean",
            "description": "Specifies if the user is an anonim or not",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeFullDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "description": "Original size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "description": "Maximum size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "description": "Medium size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "description": "Small avatar",
            "nullable": true,
            "example": "some text"
          },
          "profileUrl": {
            "type": "string",
            "description": "Profile URL",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "description": "Specifies if the user has an avatar or not",
            "example": true
          },
          "isAnonim": {
            "type": "boolean",
            "description": "Specifies if the user is an anonim or not",
            "example": true
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "some text"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "some text"
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "nullable": true,
            "example": "some text"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "some text"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.Contact"
            },
            "description": "List of contacts",
            "nullable": true
          },
          "birthday": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "sex": {
            "type": "string",
            "description": "Sex",
            "nullable": true,
            "example": "some text"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "department": {
            "type": "string",
            "description": "Department",
            "nullable": true,
            "example": "some text"
          },
          "workFrom": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto"
            },
            "description": "List of groups",
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "Location",
            "nullable": true,
            "example": "some text"
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true,
            "example": "some text"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "Specifies if the user is an administrator or not",
            "example": false
          },
          "isRoomAdmin": {
            "type": "boolean",
            "description": "Specifies if the user is a room administrator or not",
            "example": true
          },
          "isLDAP": {
            "type": "boolean",
            "description": "Specifies if the LDAP settings are enabled for the user or not",
            "example": true
          },
          "listAdminModules": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of administrator modules",
            "nullable": true,
            "example": "some text"
          },
          "isOwner": {
            "type": "boolean",
            "description": "Specifies if the user is a portal owner or not",
            "example": true
          },
          "isVisitor": {
            "type": "boolean",
            "description": "Specifies if the user is a portal visitor or not",
            "example": true
          },
          "isCollaborator": {
            "type": "boolean",
            "description": "Specifies if the user is a portal collaborator or not",
            "example": true
          },
          "cultureName": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "isSSO": {
            "type": "boolean",
            "description": "Specifies if the SSO settings are enabled for the user or not",
            "example": true
          },
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType"
          },
          "quotaLimit": {
            "type": "integer",
            "description": "Quota limit",
            "format": "int64",
            "nullable": true,
            "example": 1234
          },
          "usedSpace": {
            "type": "number",
            "description": "Portal used space",
            "format": "double",
            "nullable": true,
            "example": 12345
          },
          "shared": {
            "type": "boolean",
            "description": "Shared",
            "nullable": true,
            "example": true
          },
          "isCustomQuota": {
            "type": "boolean",
            "description": "Specifies if the user has a custom quota or not",
            "nullable": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.GroupSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "75a5f745-f697-4418-b38d-0fe0d277e258"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "some text"
          },
          "manager": {
            "type": "string",
            "description": "Manager",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Files.FileType": {
        "enum": [
          "Unknown",
          "Archive",
          "Video",
          "Audio",
          "Image",
          "Spreadsheet",
          "Presentation",
          "Document",
          "Pdf"
        ],
        "type": "integer",
        "description": "[0 - Unknown, 1 - Archive, 2 - Video, 3 - Audio, 4 - Image, 5 - Spreadsheet, 6 - Presentation, 7 - Document, 10 - Pdf]",
        "format": "int32"
      },
      "ASC.Web.Core.Users.DarkThemeSettingsType": {
        "enum": [
          "Base",
          "Dark",
          "System"
        ],
        "type": "string",
        "description": "[0 - Base, 1 - Dark, 2 - System]"
      },
      "ASC.Web.Files.Core.Compress.ICompress": {
        "type": "object",
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.CoEditingConfig": {
        "type": "object",
        "properties": {
          "change": {
            "type": "boolean",
            "description": "Change",
            "example": true
          },
          "fast": {
            "type": "boolean",
            "description": "Fast",
            "example": true
          },
          "mode": {
            "type": "string",
            "description": "Mode",
            "nullable": true,
            "readOnly": true,
            "example": "fast"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EditorType": {
        "enum": [
          "Desktop",
          "Mobile",
          "Embedded"
        ],
        "type": "integer",
        "description": "[0 - Desktop, 1 - Mobile, 2 - Embedded]",
        "format": "int32"
      },
      "ASC.Web.Files.Services.DocumentService.EmbeddedConfig": {
        "type": "object",
        "properties": {
          "embedUrl": {
            "type": "string",
            "description": "Embed url",
            "format": "uri",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "saveUrl": {
            "type": "string",
            "description": "Save url",
            "format": "uri",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "shareLinkParam": {
            "type": "string",
            "description": "Share link param",
            "nullable": true,
            "example": "some text"
          },
          "shareUrl": {
            "type": "string",
            "description": "Share url",
            "format": "uri",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "toolbarDocked": {
            "type": "string",
            "description": "Toolbar docked",
            "format": "uri",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig": {
        "type": "object",
        "properties": {
          "cryptoEngineId": {
            "type": "string",
            "description": "Crypto engine id",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "privateKeyEnc": {
            "type": "string",
            "description": "Private key enc",
            "nullable": true,
            "example": "some text"
          },
          "publicKey": {
            "type": "string",
            "description": "Public key",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FeedbackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "visible": {
            "type": "boolean",
            "description": "Visible",
            "readOnly": true,
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReference": {
        "type": "object",
        "properties": {
          "referenceData": {
            "$ref": "#/components/schemas/ASC.Web.Files.Services.DocumentService.FileReferenceData"
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "path": {
            "type": "string",
            "description": "Path",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fileType": {
            "type": "string",
            "description": "File type",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "link": {
            "type": "string",
            "description": "Link",
            "nullable": true,
            "example": "some text"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.FileReferenceData": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "description": "File key",
            "nullable": true,
            "example": "some text"
          },
          "instanceId": {
            "type": "string",
            "description": "Instance ID",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.GobackConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PermissionsConfig": {
        "type": "object",
        "properties": {
          "changeHistory": {
            "type": "boolean",
            "description": "Change history",
            "example": true
          },
          "comment": {
            "type": "boolean",
            "description": "Comment",
            "example": true
          },
          "chat": {
            "type": "boolean",
            "description": "Chat",
            "example": true
          },
          "download": {
            "type": "boolean",
            "description": "Download",
            "example": true
          },
          "edit": {
            "type": "boolean",
            "description": "Edit",
            "example": true
          },
          "fillForms": {
            "type": "boolean",
            "description": "FillForms",
            "example": true
          },
          "modifyFilter": {
            "type": "boolean",
            "description": "ModifyFilter",
            "example": true
          },
          "protect": {
            "type": "boolean",
            "description": "Protect",
            "example": true
          },
          "print": {
            "type": "boolean",
            "description": "Print",
            "example": true
          },
          "rename": {
            "type": "boolean",
            "description": "Rename",
            "example": true
          },
          "review": {
            "type": "boolean",
            "description": "Review",
            "example": true
          },
          "copy": {
            "type": "boolean",
            "description": "Copy",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.PluginsConfig": {
        "type": "object",
        "properties": {
          "pluginsData": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.RecentConfig": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "string",
            "description": "Folder",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.TemplatesConfig": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Image",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.DocumentService.UserConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true,
            "example": "some text"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "some text"
          },
          "image": {
            "type": "string",
            "description": "Image",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.AceShortWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User",
            "nullable": true,
            "example": "some text"
          },
          "permissions": {
            "type": "string",
            "description": "User access rights to the file",
            "nullable": true,
            "example": "some text"
          },
          "isLink": {
            "type": "boolean",
            "description": "Is link",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileConflictResolveType": {
        "enum": [
          "Skip",
          "Overwrite",
          "Duplicate"
        ],
        "type": "string",
        "description": "[0 - Skip, 1 - Overwrite, 2 - Duplicate]"
      },
      "ASC.Web.Files.Services.WCFService.FileOperations.FileOperationType": {
        "enum": [
          "Move",
          "Copy",
          "Delete",
          "Download",
          "MarkAsRead",
          "Import",
          "Convert",
          "Duplicate"
        ],
        "type": "integer",
        "description": "[0 - Move, 1 - Copy, 2 - Delete, 3 - Download, 4 - MarkAsRead, 5 - Import, 6 - Convert, 7 - Duplicate]",
        "format": "int32"
      },
      "ASC.Web.Files.Services.WCFService.MentionWrapper": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ASC.Core.Users.UserInfo"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "id": {
            "type": "string",
            "description": "User ID",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "image": {
            "type": "string",
            "description": "User image",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          },
          "hasAccess": {
            "type": "boolean",
            "description": "Specifies if the user has the access to the file or not",
            "readOnly": true,
            "example": true
          },
          "name": {
            "type": "string",
            "description": "User display name",
            "nullable": true,
            "readOnly": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Files.Services.WCFService.ThirdPartyParams": {
        "type": "object",
        "properties": {
          "auth_data": {
            "$ref": "#/components/schemas/ASC.Files.Core.AuthData"
          },
          "corporate": {
            "type": "boolean",
            "description": "Specifies if this is a corporate account or not",
            "example": true
          },
          "roomsStorage": {
            "type": "boolean",
            "description": "Specifies if this is a room storage or not",
            "example": true
          },
          "customer_title": {
            "type": "string",
            "description": "Customer title",
            "nullable": true,
            "example": "some text"
          },
          "provider_id": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32",
            "nullable": true,
            "example": 1234
          },
          "provider_key": {
            "type": "string",
            "description": "Provider key",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.NoContentResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair<System.Boolean, System.String>": {
        "type": "object",
        "properties": {
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentDisposition": {
        "type": "object",
        "properties": {
          "dispositionType": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "inline": {
            "type": "boolean"
          },
          "readDate": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "System.Net.Mime.ContentType": {
        "type": "object",
        "properties": {
          "boundary": {
            "type": "string",
            "nullable": true
          },
          "charSet": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {},
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "asc_auth_key": {
        "type": "apiKey",
        "in": "cookie"
      }
    }
  }
}